((request(Post_form(uri https://www.reddit.com/api/v1/access_token)(headers((authorization <AUTHORIZATION>)))(params((grant_type(password))(username(<USERNAME>))(password(<PASSWORD>))))))(response(((encoding(Fixed 114))(headers((accept-ranges bytes)(cache-control"max-age=0, must-revalidate")(connection keep-alive)(content-length 114)(content-type"application/json; charset=UTF-8")(date"Fri, 11 Sep 2020 12:09:09 GMT")(server snooserv)(set-cookie"edgebucket=dAc2vFiexBuBvQWgku; Domain=reddit.com; Max-Age=63071999; Path=/;  secure")(strict-transport-security"max-age=15552000; includeSubDomains; preload")(via"1.1 varnish")(x-content-type-options nosniff)(x-frame-options SAMEORIGIN)(x-moose majestic)(x-xss-protection"1; mode=block")))(version HTTP_1_1)(status OK)(flush false))"{\"access_token\": \"<ACCESS_TOKEN>\", \"token_type\": \"bearer\", \"expires_in\": 3600, \"scope\": \"*\"}")))((request(Get(uri https://oauth.reddit.com/search?raw_json=1&q=ocaml)(headers((authorization"bearer <ACCESS_TOKEN>")))))(response(((encoding(Fixed 86382))(headers((accept-ranges bytes)(cache-control"private, s-maxage=0, max-age=0, must-revalidate, no-store, max-age=0, must-revalidate")(connection keep-alive)(content-length 86382)(content-type"application/json; charset=UTF-8")(date"Fri, 11 Sep 2020 12:09:10 GMT")(expires -1)(server snooserv)(set-cookie"session_tracker=qkacmcobqhapikocef.0.1599826150069.Z0FBQUFBQmZXMmptbEJyS1BLWmtUVC1zY3RzcFN1b2xGLXRHM0V1cnFMYWd2UVdzR1M1VlBxbmFVa0dwWVA0cy03RVVyd04wbk5NUzBTLTROMlc4UkNwLTBteXZMS3hyZHhYV294VWRyNkxfX1pxX3B1UWYtQ1JtbndnU0NuZ3FKd29mQV84ZHNxUlM; Domain=reddit.com; Max-Age=7199; Path=/; expires=Fri, 11-Sep-2020 14:09:10 GMT; secure; SameSite=None; Secure")(set-cookie"redesign_optout=true; Domain=reddit.com; Max-Age=94607999; Path=/; expires=Mon, 11-Sep-2023 12:09:10 GMT; secure")(set-cookie"csv=1; Max-Age=63072000; Domain=.reddit.com; Path=/; Secure; SameSite=None")(set-cookie"edgebucket=JUx2maImmVLpBNBbZ6; Domain=reddit.com; Max-Age=63071999; Path=/;  secure")(strict-transport-security"max-age=15552000; includeSubDomains; preload")(vary accept-encoding)(via"1.1 varnish")(x-content-type-options nosniff)(x-frame-options SAMEORIGIN)(x-moose majestic)(x-ratelimit-remaining 599.0)(x-ratelimit-reset 50)(x-ratelimit-used 1)(x-ua-compatible IE=edge)(x-xss-protection"1; mode=block")))(version HTTP_1_1)(status OK)(flush false))"{\"kind\": \"Listing\", \"data\": {\"after\": \"t3_icqrut\", \"dist\": 25, \"facets\": {}, \"modhash\": null, \"children\": [{\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"programmingcirclejerk\", \"selftext\": \"\", \"author_fullname\": \"t2_53oyei18\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"\\\"I've also been dreaming of rewriting Dark in Rust for quite some time, largely due to frustrations with OCaml as well as some excellent marketing by the Rust community.\\\"\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/programmingcirclejerk\", \"hidden\": false, \"pwls\": 7, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ihn5kn\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.91, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 69, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": \"ae610f48-093a-11e5-a9ee-0e9d1a9f7761\", \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 69, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598571120.0, \"link_flair_type\": \"text\", \"wls\": 7, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"blog.darklang.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": \"Just spin up O(n\\u00b2) servers\", \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2uiob\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ihn5kn\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"camelCaseIsWebScale\", \"discussion_type\": null, \"num_comments\": 40, \"send_replies\": true, \"whitelist_status\": \"some_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": \"dark\", \"permalink\": \"/r/programmingcirclejerk/comments/ihn5kn/ive_also_been_dreaming_of_rewriting_dark_in_rust/\", \"parent_whitelist_status\": \"some_ads\", \"stickied\": false, \"url\": \"https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/\", \"subreddit_subscribers\": 35092, \"created_utc\": 1598542320.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"rust\", \"selftext\": \"\", \"author_fullname\": \"t2_10li90\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"First thoughts on Rust vs OCaml\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/rust\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_idh5be\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.88, \"author_flair_background_color\": \"\", \"subreddit_type\": \"public\", \"ups\": 48, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 48, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": \"contrib\", \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1597980858.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"blog.darklang.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": \"Askama \\u00b7 Quinn \\u00b7 imap-proto \\u00b7 tokio-imap\", \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2s7lj\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"idh5be\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"dochtman\", \"discussion_type\": null, \"num_comments\": 91, \"send_replies\": false, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": \"dark\", \"permalink\": \"/r/rust/comments/idh5be/first_thoughts_on_rust_vs_ocaml/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/\", \"subreddit_subscribers\": 113119, \"created_utc\": 1597952058.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"\", \"author_fullname\": \"t2_6ou7s\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"First thoughts on Rust vs OCaml\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_idq8tq\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.85, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 44, \"total_awards_received\": 1, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 44, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598013676.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"blog.darklang.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [{\"giver_coin_reward\": null, \"subreddit_id\": null, \"is_new\": false, \"days_of_drip_extension\": 0, \"coin_price\": 150, \"id\": \"award_77ba55a2-c33c-4351-ac49-807455a80148\", \"penny_donate\": null, \"award_sub_type\": \"GLOBAL\", \"coin_reward\": 0, \"icon_url\": \"https://i.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png\", \"days_of_premium\": 0, \"tiers_by_required_awardings\": null, \"resized_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=7a2f2b927be72d2b46ebd95bab8c072c3be0fbab\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=6e42b7095bcc331e53202438613aa827addf70c3\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=c740f7ef642fd2042d62c2bcba98734d08dfae6c\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=74e630f1072bb2423034ae48aefa241d834d7186\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=0a89cd8011c8210315ee60441eefd77b973a0c82\", \"width\": 128, \"height\": 128}], \"icon_width\": 2048, \"static_icon_width\": 2048, \"start_date\": null, \"is_enabled\": true, \"awardings_required_to_grant_benefits\": null, \"description\": \"Prayers up for the blessed.\", \"end_date\": null, \"subreddit_coin_reward\": 0, \"count\": 1, \"static_icon_height\": 2048, \"name\": \"Bless Up\", \"resized_static_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=7a2f2b927be72d2b46ebd95bab8c072c3be0fbab\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=6e42b7095bcc331e53202438613aa827addf70c3\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=c740f7ef642fd2042d62c2bcba98734d08dfae6c\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=74e630f1072bb2423034ae48aefa241d834d7186\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=0a89cd8011c8210315ee60441eefd77b973a0c82\", \"width\": 128, \"height\": 128}], \"icon_format\": null, \"icon_height\": 2048, \"penny_price\": null, \"award_type\": \"global\", \"static_icon_url\": \"https://i.redd.it/award_images/t5_22cerq/trfv6ems1md41_BlessUp.png\"}], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"idq8tq\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"mc10\", \"discussion_type\": null, \"num_comments\": 51, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/idq8tq/first_thoughts_on_rust_vs_ocaml/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1597984876.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"roguelikedev\", \"selftext\": \"\", \"author_fullname\": \"t2_50gh65ps\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"I'm writing a roguelike in Ocaml with SDL\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/roguelikedev\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ij3wf8\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.99, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 95, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": true, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 95, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598777935.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"i.redd.it\", \"allow_live_comments\": true, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://i.redd.it/zvyn071dg1k51.gif\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2si41\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ij3wf8\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"Tuka-Chinchilla\", \"discussion_type\": null, \"num_comments\": 14, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/roguelikedev/comments/ij3wf8/im_writing_a_roguelike_in_ocaml_with_sdl/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://i.redd.it/zvyn071dg1k51.gif\", \"subreddit_subscribers\": 35072, \"created_utc\": 1598749135.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"programming\", \"selftext\": \"\", \"author_fullname\": \"t2_10s3t\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Wireshark dissectors in OCaml, simulated annealing for sharding, migrations: what the Jane Street interns have wrought!\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/programming\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_igdkjr\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.8, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 42, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 42, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598395608.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"blog.janestreet.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://blog.janestreet.com/what-the-interns-have-wrought-2020/\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2fwo\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"igdkjr\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"yminsky\", \"discussion_type\": null, \"num_comments\": 17, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/programming/comments/igdkjr/wireshark_dissectors_in_ocaml_simulated_annealing/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://blog.janestreet.com/what-the-interns-have-wrought-2020/\", \"subreddit_subscribers\": 2855343, \"created_utc\": 1598366808.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"I heard someone describe OCaml like this on HN, and for some reason that statement has really stuck with me. I'm not sure I totally agree, but I think there's some truth there. What do you think?\", \"author_fullname\": \"t2_6o8e9\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"\\\"OCaml is the C++ of functional programming\\\" Thoughts?\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ig3mop\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.92, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 22, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 22, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1598351899.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.ocaml\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EI heard someone describe OCaml like this on HN, and for some reason that statement has really stuck with me. I\\u0026#39;m not sure I totally agree, but I think there\\u0026#39;s some truth there. What do you think?\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ig3mop\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"mruts\", \"discussion_type\": null, \"num_comments\": 27, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/ig3mop/ocaml_is_the_c_of_functional_programming_thoughts/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/ocaml/comments/ig3mop/ocaml_is_the_c_of_functional_programming_thoughts/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1598323099.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"Founded the issue it seams like ocaml and reason ide extension was set to the 4.10.0 folder resulting in the vscode using an older version of merlin\\n\\n\\u0026#x200B;\\n\\n[Now working](https://preview.redd.it/186t4ut4qzk51.png?width=1321\\u0026format=png\\u0026auto=webp\\u0026s=7112b0c4ac7bdebe303231de1a1b184c01b1970f)\\n\\nnI'm currently using Ocaml version 4.11.1 and after reeinstaling merlin after a package switch it cannot detect functions like List.filteri, compiling and and utop works with that function only merlin cant understand her.\\n\\n[unchanged from 4.10.0 where it should been 4.11.1](https://preview.redd.it/sjs9yaajpzk51.png?width=928\\u0026format=png\\u0026auto=webp\\u0026s=f3897e7ea1af2cd6fa1737b73173a10770b15efa)\\n\\nhttps://preview.redd.it/lxvsx4pz7zk51.png?width=812\\u0026format=png\\u0026auto=webp\\u0026s=bdf2d186e5cc8bf89ce5d07fa5e97a34770c3927\", \"author_fullname\": \"t2_5mtheuas\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Merlin can't detect List.filteri (OCAML 4.11.0+)\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"media_metadata\": {\"lxvsx4pz7zk51\": {\"status\": \"valid\", \"e\": \"Image\", \"m\": \"image/png\", \"p\": [{\"y\": 121, \"x\": 108, \"u\": \"https://preview.redd.it/lxvsx4pz7zk51.png?width=108\\u0026crop=smart\\u0026auto=webp\\u0026s=2853d1ba48cc8c96691e8c605a10755588663647\"}, {\"y\": 242, \"x\": 216, \"u\": \"https://preview.redd.it/lxvsx4pz7zk51.png?width=216\\u0026crop=smart\\u0026auto=webp\\u0026s=2a9807625f5c88465bd945f65b6c6b527c6c54ab\"}, {\"y\": 359, \"x\": 320, \"u\": \"https://preview.redd.it/lxvsx4pz7zk51.png?width=320\\u0026crop=smart\\u0026auto=webp\\u0026s=7433e28491e34ac170fb59d407bcdcf18cc184be\"}, {\"y\": 718, \"x\": 640, \"u\": \"https://preview.redd.it/lxvsx4pz7zk51.png?width=640\\u0026crop=smart\\u0026auto=webp\\u0026s=8df16897100e04271ea05f709ca5964c7f6de90b\"}], \"s\": {\"y\": 912, \"x\": 812, \"u\": \"https://preview.redd.it/lxvsx4pz7zk51.png?width=812\\u0026format=png\\u0026auto=webp\\u0026s=bdf2d186e5cc8bf89ce5d07fa5e97a34770c3927\"}, \"id\": \"lxvsx4pz7zk51\"}, \"sjs9yaajpzk51\": {\"status\": \"valid\", \"e\": \"Image\", \"m\": \"image/png\", \"p\": [{\"y\": 62, \"x\": 108, \"u\": \"https://preview.redd.it/sjs9yaajpzk51.png?width=108\\u0026crop=smart\\u0026auto=webp\\u0026s=07907fdaebaa9840036267fee386218c44c18b0a\"}, {\"y\": 125, \"x\": 216, \"u\": \"https://preview.redd.it/sjs9yaajpzk51.png?width=216\\u0026crop=smart\\u0026auto=webp\\u0026s=7946301627430d0e2c40f01d1ec9233a62f04719\"}, {\"y\": 185, \"x\": 320, \"u\": \"https://preview.redd.it/sjs9yaajpzk51.png?width=320\\u0026crop=smart\\u0026auto=webp\\u0026s=6dd3a37376c70c450d64d93c71280c1386106063\"}, {\"y\": 371, \"x\": 640, \"u\": \"https://preview.redd.it/sjs9yaajpzk51.png?width=640\\u0026crop=smart\\u0026auto=webp\\u0026s=e66539bfd4223f6dc17dd7ac73c96ab6aae84eb1\"}], \"s\": {\"y\": 539, \"x\": 928, \"u\": \"https://preview.redd.it/sjs9yaajpzk51.png?width=928\\u0026format=png\\u0026auto=webp\\u0026s=f3897e7ea1af2cd6fa1737b73173a10770b15efa\"}, \"id\": \"sjs9yaajpzk51\"}, \"186t4ut4qzk51\": {\"status\": \"valid\", \"e\": \"Image\", \"m\": \"image/png\", \"p\": [{\"y\": 20, \"x\": 108, \"u\": \"https://preview.redd.it/186t4ut4qzk51.png?width=108\\u0026crop=smart\\u0026auto=webp\\u0026s=0184e3c1eee440ba0aba0e38a8a8626019433beb\"}, {\"y\": 41, \"x\": 216, \"u\": \"https://preview.redd.it/186t4ut4qzk51.png?width=216\\u0026crop=smart\\u0026auto=webp\\u0026s=423caf5da4f3a2609f5b4464ae05426e69822837\"}, {\"y\": 61, \"x\": 320, \"u\": \"https://preview.redd.it/186t4ut4qzk51.png?width=320\\u0026crop=smart\\u0026auto=webp\\u0026s=65500293877e6420b713fbfc9b90418cf7fa466e\"}, {\"y\": 122, \"x\": 640, \"u\": \"https://preview.redd.it/186t4ut4qzk51.png?width=640\\u0026crop=smart\\u0026auto=webp\\u0026s=7bbedc63065ea2a299bb3bb2b99f841f5da1c059\"}, {\"y\": 183, \"x\": 960, \"u\": \"https://preview.redd.it/186t4ut4qzk51.png?width=960\\u0026crop=smart\\u0026auto=webp\\u0026s=4674203f1cc1813fe92f04a9df4eadd137b13561\"}, {\"y\": 206, \"x\": 1080, \"u\": \"https://preview.redd.it/186t4ut4qzk51.png?width=1080\\u0026crop=smart\\u0026auto=webp\\u0026s=5ab795374e141b7d93bc6bae6b1099ad375f0000\"}], \"s\": {\"y\": 252, \"x\": 1321, \"u\": \"https://preview.redd.it/186t4ut4qzk51.png?width=1321\\u0026format=png\\u0026auto=webp\\u0026s=7112b0c4ac7bdebe303231de1a1b184c01b1970f\"}, \"id\": \"186t4ut4qzk51\"}}, \"name\": \"t3_ilz7sw\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 1.0, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 5, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 5, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": 1599164047.0, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1599186730.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.ocaml\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EFounded the issue it seams like ocaml and reason ide extension was set to the 4.10.0 folder resulting in the vscode using an older version of merlin\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u0026#x200B;\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u003Ca href=\\\"https://preview.redd.it/186t4ut4qzk51.png?width=1321\\u0026amp;format=png\\u0026amp;auto=webp\\u0026amp;s=7112b0c4ac7bdebe303231de1a1b184c01b1970f\\\"\\u003ENow working\\u003C/a\\u003E\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E_____________________________________________________________________________________________________\\u003Cbr/\\u003E\\nI\\u0026#39;m currently using Ocaml version 4.11.1 and after reeinstaling merlin after a package switch it cannot detect functions like List.filteri, compiling and and utop works with that function only merlin cant understand her.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u003Ca href=\\\"https://preview.redd.it/sjs9yaajpzk51.png?width=928\\u0026amp;format=png\\u0026amp;auto=webp\\u0026amp;s=f3897e7ea1af2cd6fa1737b73173a10770b15efa\\\"\\u003Eunchanged from 4.10.0 where it should been 4.11.1\\u003C/a\\u003E\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u003Ca href=\\\"https://preview.redd.it/lxvsx4pz7zk51.png?width=812\\u0026amp;format=png\\u0026amp;auto=webp\\u0026amp;s=bdf2d186e5cc8bf89ce5d07fa5e97a34770c3927\\\"\\u003Ehttps://preview.redd.it/lxvsx4pz7zk51.png?width=812\\u0026amp;format=png\\u0026amp;auto=webp\\u0026amp;s=bdf2d186e5cc8bf89ce5d07fa5e97a34770c3927\\u003C/a\\u003E\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ilz7sw\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"Not_to_be_Named\", \"discussion_type\": null, \"num_comments\": 18, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/ilz7sw/merlin_cant_detect_listfilteri_ocaml_4110/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/ocaml/comments/ilz7sw/merlin_cant_detect_listfilteri_ocaml_4110/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1599157930.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"programmingcirclejerk\", \"selftext\": \"\", \"author_fullname\": \"t2_4tyrxghm\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"It is like paintings from famous painters in billionaire's homes. Now for me and may be for lot of people stuff from Bed Bath and Beyond is just fine on our walls. So for ultra-rich / successful/profitable company might see beauty in Ocaml but most of the world runs fine on run of the mill services\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/programmingcirclejerk\", \"hidden\": false, \"pwls\": 7, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_igf0xc\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.97, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 39, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 39, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598400222.0, \"link_flair_type\": \"text\", \"wls\": 7, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"news.ycombinator.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://news.ycombinator.com/item?id=24272613\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2uiob\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"igf0xc\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"fortis_adipo\", \"discussion_type\": null, \"num_comments\": 12, \"send_replies\": true, \"whitelist_status\": \"some_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/programmingcirclejerk/comments/igf0xc/it_is_like_paintings_from_famous_painters_in/\", \"parent_whitelist_status\": \"some_ads\", \"stickied\": false, \"url\": \"https://news.ycombinator.com/item?id=24272613\", \"subreddit_subscribers\": 35092, \"created_utc\": 1598371422.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"rust\", \"selftext\": \"\", \"author_fullname\": \"t2_cmssj\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"[Part II] rd: Why I chose Rust instead of Golang, OCaml or Dlang for the mozilla/rr debugger port\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/rust\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_i91ov0\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.89, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 51, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 51, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1597360477.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"github.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://github.com/sidkshatriya/me/blob/master/002-why-rust.md\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2s7lj\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"i91ov0\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"sidharth_k\", \"discussion_type\": null, \"num_comments\": 14, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/rust/comments/i91ov0/part_ii_rd_why_i_chose_rust_instead_of_golang/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://github.com/sidkshatriya/me/blob/master/002-why-rust.md\", \"subreddit_subscribers\": 113119, \"created_utc\": 1597331677.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"programming\", \"selftext\": \"\", \"author_fullname\": \"t2_42cz2xr8\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Haskell vs. Go vs. OCaml vs. ... (2018)\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/programming\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_hp6rdr\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.83, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 133, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 133, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1594485787.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"pl-rants.net\", \"allow_live_comments\": true, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://pl-rants.net/posts/haskell-vs-go-vs-ocaml-vs/\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2fwo\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"hp6rdr\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"linus_stallman\", \"discussion_type\": null, \"num_comments\": 69, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/programming/comments/hp6rdr/haskell_vs_go_vs_ocaml_vs_2018/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://pl-rants.net/posts/haskell-vs-go-vs-ocaml-vs/\", \"subreddit_subscribers\": 2855343, \"created_utc\": 1594456987.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"\", \"author_fullname\": \"t2_1o6s\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Draft of upcoming book \\\"OCaml Scientific Computing\\\" available\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_igcsf1\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.98, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 69, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 69, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598392999.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"discuss.ocaml.org\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://discuss.ocaml.org/t/ann-draft-of-ocaml-scientific-computing-book/6291?\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"igcsf1\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"apoisel\", \"discussion_type\": null, \"num_comments\": 5, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/igcsf1/draft_of_upcoming_book_ocaml_scientific_computing/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://discuss.ocaml.org/t/ann-draft-of-ocaml-scientific-computing-book/6291?\", \"subreddit_subscribers\": 7585, \"created_utc\": 1598364199.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"programming\", \"selftext\": \"\", \"author_fullname\": \"t2_pe5ma\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Using, Understanding, and Unraveling the OCaml Language\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/programming\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ic21kp\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.8, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 24, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 24, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1597789824.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"caml.inria.fr\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"http://caml.inria.fr/pub/docs/u3-ocaml/index.html\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2fwo\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ic21kp\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"iamkeyur\", \"discussion_type\": null, \"num_comments\": 15, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/programming/comments/ic21kp/using_understanding_and_unraveling_the_ocaml/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"http://caml.inria.fr/pub/docs/u3-ocaml/index.html\", \"subreddit_subscribers\": 2855343, \"created_utc\": 1597761024.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"programming\", \"selftext\": \"\", \"author_fullname\": \"t2_48edt\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"OCaml 4.11.0 released\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/programming\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_icu8of\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.84, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 59, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 59, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1597893265.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"discuss.ocaml.org\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://discuss.ocaml.org/t/ocaml-4-11-0-released/6265\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2fwo\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"icu8of\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"Categoria\", \"discussion_type\": null, \"num_comments\": 4, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/programming/comments/icu8of/ocaml_4110_released/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://discuss.ocaml.org/t/ocaml-4-11-0-released/6265\", \"subreddit_subscribers\": 2855343, \"created_utc\": 1597864465.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"programmingcirclejerk\", \"selftext\": \"\", \"author_fullname\": \"t2_5hlmz6gn\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"I drank some Paul Graham essay kool-aid awhile ago about Lisp being the best and searched for jobs writing Lisp. I wanted to beat averages too. Eventually I found some weirdos who were using \\u201cwants job writing Lisp\\u201d as a form of signalling, although they said \\\"we write OCaml here instead of Lisp\\\".\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/programmingcirclejerk\", \"hidden\": false, \"pwls\": 7, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_iatfaf\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.96, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 89, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": \"79988010-e956-11e9-95fe-0ef853462c14\", \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 89, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1597617531.0, \"link_flair_type\": \"text\", \"wls\": 7, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"discuss.ocaml.org\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://discuss.ocaml.org/t/why-did-you-learn-ocaml/4980/12\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": \"type astronaut\", \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2uiob\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"iatfaf\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"stracciatella_vla\", \"discussion_type\": null, \"num_comments\": 4, \"send_replies\": true, \"whitelist_status\": \"some_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": \"dark\", \"permalink\": \"/r/programmingcirclejerk/comments/iatfaf/i_drank_some_paul_graham_essay_koolaid_awhile_ago/\", \"parent_whitelist_status\": \"some_ads\", \"stickied\": false, \"url\": \"https://discuss.ocaml.org/t/why-did-you-learn-ocaml/4980/12\", \"subreddit_subscribers\": 35092, \"created_utc\": 1597588731.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"\", \"author_fullname\": \"t2_uf0lw\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Multicore OCaml: July 2020\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_i31lhf\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.91, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 40, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 40, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1596505285.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"discuss.ocaml.org\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://discuss.ocaml.org/t/multicore-ocaml-july-2020/6186\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"i31lhf\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"rbjorklin\", \"discussion_type\": null, \"num_comments\": 22, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/i31lhf/multicore_ocaml_july_2020/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://discuss.ocaml.org/t/multicore-ocaml-july-2020/6186\", \"subreddit_subscribers\": 7585, \"created_utc\": 1596476485.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"\", \"author_fullname\": \"t2_1o6s\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"OCaml 4.11.1\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ikksvt\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.97, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 46, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 46, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598997755.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"github.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://github.com/ocaml/ocaml/blob/4.11.1/Changes\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ikksvt\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"apoisel\", \"discussion_type\": null, \"num_comments\": 2, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/ikksvt/ocaml_4111/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://github.com/ocaml/ocaml/blob/4.11.1/Changes\", \"subreddit_subscribers\": 7585, \"created_utc\": 1598968955.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"How do you achieve \\\"functional core, imperative shell\\\" in OCaml? By which I mean, having business logic as pure as possible to enabling easier (or no) mocking and testing. In Haskell they have the IO monad which can be replaced during testing (and also other idioms). In JavaScript there's redux-saga which wraps all side-effects in promises and \\\"bubbles\\\" them up in the callstack using yield and generators. In general there's not much talk about side-effect discipline in the OCaml community, am I wrong?\\n\\n\\\"functional core, imperative shell.md\\\" (list of resources): https://gist.github.com/kbilsted/abdc017858cad68c3e7926b03646554e\", \"author_fullname\": \"t2_4cliwguq\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"\\\"Functional core, imperative shell\\\" in OCaml\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_iaehta\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.95, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 20, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 20, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1597551059.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.ocaml\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EHow do you achieve \\u0026quot;functional core, imperative shell\\u0026quot; in OCaml? By which I mean, having business logic as pure as possible to enabling easier (or no) mocking and testing. In Haskell they have the IO monad which can be replaced during testing (and also other idioms). In JavaScript there\\u0026#39;s redux-saga which wraps all side-effects in promises and \\u0026quot;bubbles\\u0026quot; them up in the callstack using yield and generators. In general there\\u0026#39;s not much talk about side-effect discipline in the OCaml community, am I wrong?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u0026quot;functional core, imperative shell.md\\u0026quot; (list of resources): \\u003Ca href=\\\"https://gist.github.com/kbilsted/abdc017858cad68c3e7926b03646554e\\\"\\u003Ehttps://gist.github.com/kbilsted/abdc017858cad68c3e7926b03646554e\\u003C/a\\u003E\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"iaehta\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"usernameqwerty003\", \"discussion_type\": null, \"num_comments\": 7, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/iaehta/functional_core_imperative_shell_in_ocaml/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/ocaml/comments/iaehta/functional_core_imperative_shell_in_ocaml/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1597522259.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"Cornell\", \"selftext\": \"Hey does anyone know how I should install OCaml this semester? I know there are multiple ways to do it and certain ways make it easier for TAs to help students. Any advice pertaining to this topic is helpful.\", \"author_fullname\": \"t2_32e7mcs7\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"How should I install OCaml for this semester??\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/Cornell\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ij38m8\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 1.0, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 6, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 6, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1598775202.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.Cornell\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EHey does anyone know how I should install OCaml this semester? I know there are multiple ways to do it and certain ways make it easier for TAs to help students. Any advice pertaining to this topic is helpful.\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2r0sd\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ij38m8\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"efex03\", \"discussion_type\": null, \"num_comments\": 5, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/Cornell/comments/ij38m8/how_should_i_install_ocaml_for_this_semester/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/Cornell/comments/ij38m8/how_should_i_install_ocaml_for_this_semester/\", \"subreddit_subscribers\": 26463, \"created_utc\": 1598746402.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"\", \"author_fullname\": \"t2_8o6mj\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"OCaml-MPST: a communication library powered by Multiparty Session Types\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ijygv6\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.96, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 25, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 25, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598911152.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"github.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://github.com/keigoi/ocaml-mpst\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ijygv6\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"abathologist\", \"discussion_type\": null, \"num_comments\": 2, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/ijygv6/ocamlmpst_a_communication_library_powered_by/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://github.com/keigoi/ocaml-mpst\", \"subreddit_subscribers\": 7585, \"created_utc\": 1598882352.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"I would like to build myself a programming blog where I post about Programming Languages Theory. (something looking similar to e.g. [http://typeocaml.com/2015/03/17/binomial-heap/](http://typeocaml.com/2015/03/17/binomial-heap/)).\\n\\n* Is it possible for me to stick completely to writing only pure OCaml code ? (backend \\u0026 frontend, I've only used OCaml for my university so please excuse if I seem ignorant)\\n* Need comments for discussion and article content/search, hence what database ?\\n* Would like to run OCaml code snippets (similar to the Real World Ocaml code listings but with the ability to run that code on the page itself)\\n* Could you advise me then on what libraries I should go with in this journey ?\\n\\nOnce I'm done the blog code will be posted on github.\", \"author_fullname\": \"t2_7872msv4\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Writing a blog in OCaml ?\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_icyr41\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.91, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 15, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 15, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": 1597914731.0, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1597907534.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.ocaml\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EI would like to build myself a programming blog where I post about Programming Languages Theory. (something looking similar to e.g. \\u003Ca href=\\\"http://typeocaml.com/2015/03/17/binomial-heap/\\\"\\u003Ehttp://typeocaml.com/2015/03/17/binomial-heap/\\u003C/a\\u003E).\\u003C/p\\u003E\\n\\n\\u003Cul\\u003E\\n\\u003Cli\\u003EIs it possible for me to stick completely to writing only pure OCaml code ? (backend \\u0026amp; frontend, I\\u0026#39;ve only used OCaml for my university so please excuse if I seem ignorant)\\u003C/li\\u003E\\n\\u003Cli\\u003ENeed comments for discussion and article content/search, hence what database ?\\u003C/li\\u003E\\n\\u003Cli\\u003EWould like to run OCaml code snippets (similar to the Real World Ocaml code listings but with the ability to run that code on the page itself)\\u003C/li\\u003E\\n\\u003Cli\\u003ECould you advise me then on what libraries I should go with in this journey ?\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\\n\\u003Cp\\u003EOnce I\\u0026#39;m done the blog code will be posted on github.\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": true, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"icyr41\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"CryptographerTop4469\", \"discussion_type\": null, \"num_comments\": 7, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/icyr41/writing_a_blog_in_ocaml/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/ocaml/comments/icyr41/writing_a_blog_in_ocaml/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1597878734.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"I've been picking up a bit of Ocaml in my spare time (using real world ocaml), and I wanted to create a toy project which makes some http requests and does something interesting with the results. I'm having a little trouble writing unit tests for it though.\\n\\nHere's an example of the problem I'm having--say that I have some modules:\\n\\n    module M : sig =\\n      type t\\n\\n      val create : unit -\\u003E t\\n\\n      (* Contacts the outside world,\\n          not fine to call in a unit test *)\\n      val lookup : t -\\u003E \\u003Csome args\\u003E -\\u003E \\u003Csome result\\u003E\\n    end\\n\\n    module N : sig =\\n      type t\\n\\n      val create : M.t -\\u003E t\\n\\n      (* Calls M.lookup, and does something interesting *)\\n      val query : t -\\u003E \\u003Csome args\\u003E -\\u003E \\u003Csome result\\u003E\\n    end\\n\\nSay I wanted to test N.query. How would I go about mocking out M?\\n\\nIn C++ (or other object-oriented languages), it would be pretty straightforward; I would just subclass M, reimplement lookup, and go from there. In OCaml, I can see two ways of doing this, both of which seem annoying:\\n\\n1) Allow for creating an M in test-mode, and rewrite M.lookup to support this. I don't like this because this forces me to modify M's production code to enable testing.\\n\\n2) Create a functor that takes a module matching M's sig, and produces a module matching N's sig. Then expose N as Functor (M), and test on Functor (Mock_m). I like this a little more than (1), but still am not a huge fan, since it's possible \\nto completely change N without breaking the unit tests. Also it seems a little annoying to do this every time you want to test something that interacts with the outside world.\\n\\n3) There are some mocking frameworks that a cursory Google search brought up, but they don't seem widely used.\\n\\nIs there anything I'm missing here? This seems to me like something OCaml users (or functional programmers in general) would run into often, so I'm wondering if there's anything that makes this easier or nicer.\", \"author_fullname\": \"t2_1ap7w5d\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"How do I mock out modules in Ocaml?\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_ia2ht5\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.92, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 10, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 10, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1597501222.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.ocaml\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EI\\u0026#39;ve been picking up a bit of Ocaml in my spare time (using real world ocaml), and I wanted to create a toy project which makes some http requests and does something interesting with the results. I\\u0026#39;m having a little trouble writing unit tests for it though.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EHere\\u0026#39;s an example of the problem I\\u0026#39;m having--say that I have some modules:\\u003C/p\\u003E\\n\\n\\u003Cpre\\u003E\\u003Ccode\\u003Emodule M : sig =\\n  type t\\n\\n  val create : unit -\\u0026gt; t\\n\\n  (* Contacts the outside world,\\n      not fine to call in a unit test *)\\n  val lookup : t -\\u0026gt; \\u0026lt;some args\\u0026gt; -\\u0026gt; \\u0026lt;some result\\u0026gt;\\nend\\n\\nmodule N : sig =\\n  type t\\n\\n  val create : M.t -\\u0026gt; t\\n\\n  (* Calls M.lookup, and does something interesting *)\\n  val query : t -\\u0026gt; \\u0026lt;some args\\u0026gt; -\\u0026gt; \\u0026lt;some result\\u0026gt;\\nend\\n\\u003C/code\\u003E\\u003C/pre\\u003E\\n\\n\\u003Cp\\u003ESay I wanted to test N.query. How would I go about mocking out M?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EIn C++ (or other object-oriented languages), it would be pretty straightforward; I would just subclass M, reimplement lookup, and go from there. In OCaml, I can see two ways of doing this, both of which seem annoying:\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E1) Allow for creating an M in test-mode, and rewrite M.lookup to support this. I don\\u0026#39;t like this because this forces me to modify M\\u0026#39;s production code to enable testing.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E2) Create a functor that takes a module matching M\\u0026#39;s sig, and produces a module matching N\\u0026#39;s sig. Then expose N as Functor (M), and test on Functor (Mock_m). I like this a little more than (1), but still am not a huge fan, since it\\u0026#39;s possible \\nto completely change N without breaking the unit tests. Also it seems a little annoying to do this every time you want to test something that interacts with the outside world.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E3) There are some mocking frameworks that a cursory Google search brought up, but they don\\u0026#39;t seem widely used.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EIs there anything I\\u0026#39;m missing here? This seems to me like something OCaml users (or functional programmers in general) would run into often, so I\\u0026#39;m wondering if there\\u0026#39;s anything that makes this easier or nicer.\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": true, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"ia2ht5\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"ctrthrower\", \"discussion_type\": null, \"num_comments\": 9, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/ia2ht5/how_do_i_mock_out_modules_in_ocaml/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/ocaml/comments/ia2ht5/how_do_i_mock_out_modules_in_ocaml/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1597472422.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"\", \"author_fullname\": \"t2_1o6s\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"OCaml 2020 Workshop (ICFP 2020) Videos\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_iiq5uh\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 1.0, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 46, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 46, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1598725286.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"youtube.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://www.youtube.com/channel/UCjrxSvgZDrku8s7eeZ-L9Tg\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"iiq5uh\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"apoisel\", \"discussion_type\": null, \"num_comments\": 0, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/iiq5uh/ocaml_2020_workshop_icfp_2020_videos/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.youtube.com/channel/UCjrxSvgZDrku8s7eeZ-L9Tg\", \"subreddit_subscribers\": 7585, \"created_utc\": 1598696486.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"Check out https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/ocaml-ocamlflambda.html\\n\\nExcept for one test (k-nucleotide), flambda is slower than the regular compiler on every single benchmark. And sometimes by a lot.\\n\\nmandelbrot 7.49 for regular vs 14.91 for flambda\\n\\nfannkuch-redux, 8.86 vs 12.33\\n\\nWhy is flambda so much slower and rarely faster?\\n\\nNote that for each of these benchmarks, the code is exactly the same.\", \"author_fullname\": \"t2_6o8e9\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Why is Flambda performance so much worse than regular OCaml's performance on the Language Shootout benchmarks?\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_i6e9gz\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 1.0, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 16, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 16, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1596980563.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.ocaml\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003ECheck out \\u003Ca href=\\\"https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/ocaml-ocamlflambda.html\\\"\\u003Ehttps://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/ocaml-ocamlflambda.html\\u003C/a\\u003E\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EExcept for one test (k-nucleotide), flambda is slower than the regular compiler on every single benchmark. And sometimes by a lot.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003Emandelbrot 7.49 for regular vs 14.91 for flambda\\u003C/p\\u003E\\n\\n\\u003Cp\\u003Efannkuch-redux, 8.86 vs 12.33\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EWhy is flambda so much slower and rarely faster?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003ENote that for each of these benchmarks, the code is exactly the same.\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"i6e9gz\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"mruts\", \"discussion_type\": null, \"num_comments\": 5, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/i6e9gz/why_is_flambda_performance_so_much_worse_than/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/ocaml/comments/i6e9gz/why_is_flambda_performance_so_much_worse_than/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1596951763.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"\", \"author_fullname\": \"t2_a50e9\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"Pure: a language for playing with pure type systems, written in OCaml\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_i4mtbv\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 1.0, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 31, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 31, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": false, \"mod_note\": null, \"created\": 1596725173.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"github.com\", \"allow_live_comments\": false, \"selftext_html\": null, \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"url_overridden_by_dest\": \"https://github.com/mmcqd/pure\", \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"i4mtbv\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"MattCubed\", \"discussion_type\": null, \"num_comments\": 5, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/i4mtbv/pure_a_language_for_playing_with_pure_type/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://github.com/mmcqd/pure\", \"subreddit_subscribers\": 7585, \"created_utc\": 1596696373.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}, {\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"ocaml\", \"selftext\": \"We have the pleasure of announcing the release of OCaml version 4.11.0,\\ndedicated to the memory of Blaise Pascal on the anniversary of his death.\\n\\nSome of the highlights in this release are:\\n\\n* Statmemprof: a new statistical memory profiler\\n* A new instrumented runtime that logs runtime statistics in a standard format\\n* A native backend for the RISC-V architecture\\n* Improved backtraces that refer to function names\\n* Support for recursive and yet unboxed types\\n* A quoted extension syntax for ppxs.\\n* Many quality of life improvements\\n* Many bug fixes.\\n\\nThe full changelog can be found [here](https://github.com/ocaml/ocaml/blob/4.11/Changes).\", \"author_fullname\": \"t2_i49at\", \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"OCaml 4.11.0 released\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/ocaml\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": null, \"downs\": 0, \"top_awarded_type\": null, \"hide_score\": false, \"name\": \"t3_icqrut\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.96, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 80, \"total_awards_received\": 0, \"media_embed\": {}, \"author_flair_template_id\": null, \"is_original_content\": false, \"user_reports\": [], \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": null, \"can_mod_post\": false, \"score\": 80, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"\", \"edited\": false, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1597882782.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.ocaml\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EWe have the pleasure of announcing the release of OCaml version 4.11.0,\\ndedicated to the memory of Blaise Pascal on the anniversary of his death.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003ESome of the highlights in this release are:\\u003C/p\\u003E\\n\\n\\u003Cul\\u003E\\n\\u003Cli\\u003EStatmemprof: a new statistical memory profiler\\u003C/li\\u003E\\n\\u003Cli\\u003EA new instrumented runtime that logs runtime statistics in a standard format\\u003C/li\\u003E\\n\\u003Cli\\u003EA native backend for the RISC-V architecture\\u003C/li\\u003E\\n\\u003Cli\\u003EImproved backtraces that refer to function names\\u003C/li\\u003E\\n\\u003Cli\\u003ESupport for recursive and yet unboxed types\\u003C/li\\u003E\\n\\u003Cli\\u003EA quoted extension syntax for ppxs.\\u003C/li\\u003E\\n\\u003Cli\\u003EMany quality of life improvements\\u003C/li\\u003E\\n\\u003Cli\\u003EMany bug fixes.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\\n\\u003Cp\\u003EThe full changelog can be found \\u003Ca href=\\\"https://github.com/ocaml/ocaml/blob/4.11/Changes\\\"\\u003Ehere\\u003C/a\\u003E.\\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [], \"awarders\": [], \"media_only\": false, \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": null, \"subreddit_id\": \"t5_2qh60\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"icqrut\", \"is_robot_indexable\": true, \"report_reasons\": null, \"author\": \"octachron\", \"discussion_type\": null, \"num_comments\": 0, \"send_replies\": true, \"whitelist_status\": \"all_ads\", \"contest_mode\": false, \"mod_reports\": [], \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/ocaml/comments/icqrut/ocaml_4110_released/\", \"parent_whitelist_status\": \"all_ads\", \"stickied\": false, \"url\": \"https://www.reddit.com/r/ocaml/comments/icqrut/ocaml_4110_released/\", \"subreddit_subscribers\": 7585, \"created_utc\": 1597853982.0, \"num_crossposts\": 0, \"media\": null, \"is_video\": false}}], \"before\": null}}")))