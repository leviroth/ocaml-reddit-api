((request(Post_form(uri https://www.reddit.com/api/v1/access_token)(headers((authorization <AUTHORIZATION>)))(params((grant_type(password))(username(<USERNAME>))(password(<PASSWORD>))))))(response(((encoding(Fixed 117))(headers((accept-ranges bytes)(cache-control"max-age=0, must-revalidate")(connection keep-alive)(content-length 117)(content-type"application/json; charset=UTF-8")(date"Tue, 09 Feb 2021 14:33:59 GMT")(server snooserv)(set-cookie"edgebucket=I9sCO4hILm8IXgykX8; Domain=reddit.com; Max-Age=63071999; Path=/;  secure")(strict-transport-security"max-age=15552000; includeSubDomains; preload")(via"1.1 varnish")(x-content-type-options nosniff)(x-frame-options SAMEORIGIN)(x-moose majestic)(x-xss-protection"1; mode=block")))(version HTTP_1_1)(status OK)(flush false))"{\"access_token\": \"<ACCESS_TOKEN>\", \"token_type\": \"bearer\", \"expires_in\": 3600, \"scope\": \"*\"}")))((request(Get(uri https://oauth.reddit.com/comments/kvzaot?raw_json=1)(headers((authorization"bearer <ACCESS_TOKEN>")))))(response(((encoding(Fixed 163601))(headers((accept-ranges bytes)(cache-control"private, s-maxage=0, max-age=0, must-revalidate, no-store, max-age=0, must-revalidate")(connection keep-alive)(content-length 163601)(content-type"application/json; charset=UTF-8")(date"Tue, 09 Feb 2021 14:34:00 GMT")(expires -1)(server snooserv)(set-cookie"session_tracker=ehajdglepllggndqeh.0.1612881239676.Z0FBQUFBQmdJcDFZZTNzeHpUUzM4Z2dpMEtnNjg3QjAxeWlKNXVFYWc2cTdJSS1fTE9WUmlOa2ZqWWZIWWF5b3N2UmpoLUxSNW1qS3hVTGprb0FyN0J3SHRoN3N2eWE5ejljNnVlWE8zTS1lWjU4emFYSzFRXzNGTU9oUGdDcmVOZlZIQ3MxZlBRTEo; Domain=reddit.com; Max-Age=7199; Path=/; expires=Tue, 09-Feb-2021 16:34:00 GMT; secure; SameSite=None; Secure")(set-cookie"redesign_optout=true; Domain=reddit.com; Max-Age=94607999; Path=/; expires=Fri, 09-Feb-2024 14:33:59 GMT; secure")(set-cookie"csv=1; Max-Age=63072000; Domain=.reddit.com; Path=/; Secure; SameSite=None")(set-cookie"edgebucket=GTTwBHSnSBEsvMyxFt; Domain=reddit.com; Max-Age=63071999; Path=/;  secure")(strict-transport-security"max-age=15552000; includeSubDomains; preload")(vary accept-encoding)(via"1.1 varnish")(x-content-type-options nosniff)(x-frame-options SAMEORIGIN)(x-moose majestic)(x-ratelimit-remaining 598.0)(x-ratelimit-reset 361)(x-ratelimit-used 2)(x-ua-compatible IE=edge)(x-xss-protection"1; mode=block")))(version HTTP_1_1)(status OK)(flush false))"[{\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": 1, \"children\": [{\"kind\": \"t3\", \"data\": {\"approved_at_utc\": null, \"subreddit\": \"redditdev\", \"selftext\": \"As part of modernizing our OAuth2 infrastructure, we\\u2019re implementing some potentially breaking changes to our OAuth2 flow as outlined below on February 15, 2021.\\n\\n# Refresh Token Changes\\n\\nWhen executing our refresh token flow, we currently only send back an access token in the response. Responses to `/api/v1/access_token` with `grant_type=refresh_token` looked like:\\n\\n    {\\n    \\\"access_token\\\": \\\"your access token\\\",\\n    \\\"token_type\\\": \\\"bearer\\\",\\n    \\\"expires_in\\\": 3600,\\n    \\\"scope\\\": \\\"your scopes\\\"\\n    }\\n\\nThis meant that the refresh token you get during the authorization code flow can be reused indefinitely. Going forward, our **response will also include a brand new refresh token** (as allowed by the [RFC spec](https://tools.ietf.org/html/rfc6749#section-4.1)).\\n\\n    {\\n    \\\"access_token\\\": \\\"your access token\\\",\\n    \\\"token_type\\\": \\\"bearer\\\",\\n    \\\"expires_in\\\": 3600,\\n    \\\"refresh_token\\\": \\\"your new refresh token\\\",\\n    \\\"scope\\\": \\\"your scopes\\\"\\n    }\\n\\nSince some OAuth2 client implementations might not handle this scenario (whereas [PRAW](https://github.com/praw-dev/prawcore/blob/1db01c55ba4e94084206fb2e01bb6a6e62f998ff/prawcore/auth.py#L164-L165) does, for example), we\\u2019re **not immediately enforcing revocation of the consumed refresh token**. We\\u2019re looking to enforce this **starting in Q2 2021**, given there aren't significant numbers of OAuth2 clients misbehaving after the change.\\n\\nAlso note that all refresh tokens previously had no expiration. We're going to start enforcing a **1 year expiration on refresh tokens** to help curb Reddit's storage for refresh tokens (we've got a lot of them).\\n\\n# Authorization Code Reuse\\n\\nWhen executing our authorization code flow, we consume the auth code in exchange for an access token. If, within an auth code's 10 minute TTL, that **same auth code is attempted to be used again, we will revoke any tokens issued** with said auth code, per [RFC spec](https://tools.ietf.org/html/rfc6749#section-4.1.2) . This should be unnoticeable to well-behaved clients; however, instead of harmlessly failing, we will now be revoking any access or refresh tokens issued with that auth code.\\n\\n# Redirect URI Fix Fragments\\n\\nThe last, but likely least impactful, change we're implementing is **adding a \\\"fix fragment\\\"** `#_` to **the end of the redirect URI** in the `Location` header in response to a `POST` request to `/api/v1/authorize`. This should be transparent as browsers and url parsers should drop the fragment when redirecting.\\n\\nEdit 1: clarified Reddit's storage of refresh tokens. \\n\\nEdit 2: Adding a note about potential network connectivity / cosmic rays breaking the refresh token flow. As it stands now, we're including a 2 retries leeway to account for any miscommunication in this process starting Q2 2021. E.g.,. you can send the same refresh token 3 times before it is irrevocably revoked. \", \"user_reports\": [], \"saved\": false, \"mod_reason_title\": null, \"gilded\": 0, \"clicked\": false, \"title\": \"OAuth2 API Changes Upcoming\", \"link_flair_richtext\": [], \"subreddit_name_prefixed\": \"r/redditdev\", \"hidden\": false, \"pwls\": 6, \"link_flair_css_class\": \"\", \"downs\": 0, \"thumbnail_height\": null, \"top_awarded_type\": null, \"parent_whitelist_status\": \"all_ads\", \"hide_score\": false, \"name\": \"t3_kvzaot\", \"quarantine\": false, \"link_flair_text_color\": \"dark\", \"upvote_ratio\": 0.86, \"author_flair_background_color\": null, \"subreddit_type\": \"public\", \"ups\": 38, \"total_awards_received\": 1, \"media_embed\": {}, \"thumbnail_width\": null, \"author_flair_template_id\": null, \"is_original_content\": false, \"author_fullname\": \"t2_4pn6u5oy\", \"secure_media\": null, \"is_reddit_media_domain\": false, \"is_meta\": false, \"category\": null, \"secure_media_embed\": {}, \"link_flair_text\": \"Reddit API\", \"can_mod_post\": false, \"score\": 38, \"approved_by\": null, \"author_premium\": false, \"thumbnail\": \"self\", \"edited\": 1610636014.0, \"author_flair_css_class\": null, \"author_flair_richtext\": [], \"gildings\": {\"gid_1\": 1}, \"content_categories\": null, \"is_self\": true, \"mod_note\": null, \"created\": 1610510216.0, \"link_flair_type\": \"text\", \"wls\": 6, \"removed_by_category\": null, \"banned_by\": null, \"author_flair_type\": \"text\", \"domain\": \"self.redditdev\", \"allow_live_comments\": false, \"selftext_html\": \"\\u003C!-- SC_OFF --\\u003E\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EAs part of modernizing our OAuth2 infrastructure, we\\u2019re implementing some potentially breaking changes to our OAuth2 flow as outlined below on February 15, 2021.\\u003C/p\\u003E\\n\\n\\u003Ch1\\u003ERefresh Token Changes\\u003C/h1\\u003E\\n\\n\\u003Cp\\u003EWhen executing our refresh token flow, we currently only send back an access token in the response. Responses to \\u003Ccode\\u003E/api/v1/access_token\\u003C/code\\u003E with \\u003Ccode\\u003Egrant_type=refresh_token\\u003C/code\\u003E looked like:\\u003C/p\\u003E\\n\\n\\u003Cpre\\u003E\\u003Ccode\\u003E{\\n\\u0026quot;access_token\\u0026quot;: \\u0026quot;your access token\\u0026quot;,\\n\\u0026quot;token_type\\u0026quot;: \\u0026quot;bearer\\u0026quot;,\\n\\u0026quot;expires_in\\u0026quot;: 3600,\\n\\u0026quot;scope\\u0026quot;: \\u0026quot;your scopes\\u0026quot;\\n}\\n\\u003C/code\\u003E\\u003C/pre\\u003E\\n\\n\\u003Cp\\u003EThis meant that the refresh token you get during the authorization code flow can be reused indefinitely. Going forward, our \\u003Cstrong\\u003Eresponse will also include a brand new refresh token\\u003C/strong\\u003E (as allowed by the \\u003Ca href=\\\"https://tools.ietf.org/html/rfc6749#section-4.1\\\"\\u003ERFC spec\\u003C/a\\u003E).\\u003C/p\\u003E\\n\\n\\u003Cpre\\u003E\\u003Ccode\\u003E{\\n\\u0026quot;access_token\\u0026quot;: \\u0026quot;your access token\\u0026quot;,\\n\\u0026quot;token_type\\u0026quot;: \\u0026quot;bearer\\u0026quot;,\\n\\u0026quot;expires_in\\u0026quot;: 3600,\\n\\u0026quot;refresh_token\\u0026quot;: \\u0026quot;your new refresh token\\u0026quot;,\\n\\u0026quot;scope\\u0026quot;: \\u0026quot;your scopes\\u0026quot;\\n}\\n\\u003C/code\\u003E\\u003C/pre\\u003E\\n\\n\\u003Cp\\u003ESince some OAuth2 client implementations might not handle this scenario (whereas \\u003Ca href=\\\"https://github.com/praw-dev/prawcore/blob/1db01c55ba4e94084206fb2e01bb6a6e62f998ff/prawcore/auth.py#L164-L165\\\"\\u003EPRAW\\u003C/a\\u003E does, for example), we\\u2019re \\u003Cstrong\\u003Enot immediately enforcing revocation of the consumed refresh token\\u003C/strong\\u003E. We\\u2019re looking to enforce this \\u003Cstrong\\u003Estarting in Q2 2021\\u003C/strong\\u003E, given there aren\\u0026#39;t significant numbers of OAuth2 clients misbehaving after the change.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EAlso note that all refresh tokens previously had no expiration. We\\u0026#39;re going to start enforcing a \\u003Cstrong\\u003E1 year expiration on refresh tokens\\u003C/strong\\u003E to help curb Reddit\\u0026#39;s storage for refresh tokens (we\\u0026#39;ve got a lot of them).\\u003C/p\\u003E\\n\\n\\u003Ch1\\u003EAuthorization Code Reuse\\u003C/h1\\u003E\\n\\n\\u003Cp\\u003EWhen executing our authorization code flow, we consume the auth code in exchange for an access token. If, within an auth code\\u0026#39;s 10 minute TTL, that \\u003Cstrong\\u003Esame auth code is attempted to be used again, we will revoke any tokens issued\\u003C/strong\\u003E with said auth code, per \\u003Ca href=\\\"https://tools.ietf.org/html/rfc6749#section-4.1.2\\\"\\u003ERFC spec\\u003C/a\\u003E . This should be unnoticeable to well-behaved clients; however, instead of harmlessly failing, we will now be revoking any access or refresh tokens issued with that auth code.\\u003C/p\\u003E\\n\\n\\u003Ch1\\u003ERedirect URI Fix Fragments\\u003C/h1\\u003E\\n\\n\\u003Cp\\u003EThe last, but likely least impactful, change we\\u0026#39;re implementing is \\u003Cstrong\\u003Eadding a \\u0026quot;fix fragment\\u0026quot;\\u003C/strong\\u003E \\u003Ccode\\u003E#_\\u003C/code\\u003E to \\u003Cstrong\\u003Ethe end of the redirect URI\\u003C/strong\\u003E in the \\u003Ccode\\u003ELocation\\u003C/code\\u003E header in response to a \\u003Ccode\\u003EPOST\\u003C/code\\u003E request to \\u003Ccode\\u003E/api/v1/authorize\\u003C/code\\u003E. This should be transparent as browsers and url parsers should drop the fragment when redirecting.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EEdit 1: clarified Reddit\\u0026#39;s storage of refresh tokens. \\u003C/p\\u003E\\n\\n\\u003Cp\\u003EEdit 2: Adding a note about potential network connectivity / cosmic rays breaking the refresh token flow. As it stands now, we\\u0026#39;re including a 2 retries leeway to account for any miscommunication in this process starting Q2 2021. E.g.,. you can send the same refresh token 3 times before it is irrevocably revoked. \\u003C/p\\u003E\\n\\u003C/div\\u003E\\u003C!-- SC_ON --\\u003E\", \"likes\": null, \"suggested_sort\": null, \"banned_at_utc\": null, \"view_count\": null, \"archived\": false, \"no_follow\": false, \"is_crosspostable\": true, \"pinned\": false, \"over_18\": false, \"all_awardings\": [{\"giver_coin_reward\": null, \"subreddit_id\": null, \"is_new\": false, \"days_of_drip_extension\": 0, \"coin_price\": 100, \"id\": \"gid_1\", \"penny_donate\": null, \"coin_reward\": 0, \"icon_url\": \"https://www.redditstatic.com/gold/awards/icon/silver_512.png\", \"days_of_premium\": 0, \"icon_height\": 512, \"tiers_by_required_awardings\": null, \"resized_icons\": [{\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_16.png\", \"width\": 16, \"height\": 16}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_32.png\", \"width\": 32, \"height\": 32}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_48.png\", \"width\": 48, \"height\": 48}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_64.png\", \"width\": 64, \"height\": 64}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_128.png\", \"width\": 128, \"height\": 128}], \"icon_width\": 512, \"static_icon_width\": 512, \"start_date\": null, \"is_enabled\": true, \"awardings_required_to_grant_benefits\": null, \"description\": \"Shows the Silver Award... and that's it.\", \"end_date\": null, \"subreddit_coin_reward\": 0, \"count\": 1, \"static_icon_height\": 512, \"name\": \"Silver\", \"resized_static_icons\": [{\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_16.png\", \"width\": 16, \"height\": 16}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_32.png\", \"width\": 32, \"height\": 32}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_48.png\", \"width\": 48, \"height\": 48}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_64.png\", \"width\": 64, \"height\": 64}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/silver_128.png\", \"width\": 128, \"height\": 128}], \"icon_format\": null, \"award_sub_type\": \"GLOBAL\", \"penny_price\": null, \"award_type\": \"global\", \"static_icon_url\": \"https://www.redditstatic.com/gold/awards/icon/silver_512.png\"}], \"awarders\": [], \"media_only\": false, \"link_flair_template_id\": \"c4edd5ce-40e8-11e7-b814-0ef91bd65558\", \"can_gild\": true, \"spoiler\": false, \"locked\": false, \"author_flair_text\": null, \"treatment_tags\": [], \"visited\": false, \"removed_by\": null, \"num_reports\": null, \"distinguished\": \"admin\", \"subreddit_id\": \"t5_2qizd\", \"mod_reason_by\": null, \"removal_reason\": null, \"link_flair_background_color\": \"\", \"id\": \"kvzaot\", \"is_robot_indexable\": true, \"num_duplicates\": 1, \"report_reasons\": null, \"author\": \"securimancer\", \"discussion_type\": null, \"num_comments\": 44, \"send_replies\": true, \"media\": null, \"contest_mode\": false, \"author_patreon_flair\": false, \"author_flair_text_color\": null, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/\", \"whitelist_status\": \"all_ads\", \"stickied\": true, \"url\": \"https://www.reddit.com/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/\", \"subreddit_subscribers\": 50380, \"created_utc\": 1610481416.0, \"num_crossposts\": 1, \"mod_reports\": [], \"is_video\": false}}], \"after\": null, \"before\": null}}, {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 1, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 14, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 4, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"af094f1e-4ff1-11e7-93d5-0e570865bba8\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 4, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj4pdvj\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"not_an_aardvark\", \"can_mod_post\": false, \"created_utc\": 1610557887.0, \"send_replies\": true, \"parent_id\": \"t1_gj3mbjz\", \"score\": 4, \"author_fullname\": \"t2_k83md\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"\\u003E Only thing I'd disagree with you is for actual OAuth2 applications where user authenticates. The refreshing of refresh_token is part of the RFC, and it does offer something more secure than an infinite refresh_token.\\n\\nFrom skimming through the RFC just now, it seems like providing a new refresh token is indeed an optional part of the RFC, but I don't think revoking the old refresh token automatically in this case is part of it. (I didn't go through the RFC thoroughly just now, so I might be wrong.)\\n\\nI'm not sure I'd agree that auto-cycling refresh tokens is more secure. If a bot is always storing the currently-valid refresh token anyway, then anyone who compromises a refresh token (plus the client ID/secret) would still be able to use it indefinitely, by refreshing it themselves. So the compromise would have long-term effects even though the refresh token itself would be auto-revoked.\\n\\n\\u003E Only difference between a bot/script and a user OAuth2 application is that you can easily re-authenticate a user, but not so much for bots/scripts\\n\\nIt's not necessarily easy to reauthenticate a user with a \\\"web\\\"/\\\"installed\\\" app. For example, consider a hypothetical app that checks the user's reddit inbox periodically and forwards unread messages as emails. Since the use of the user's account might happen while the user isn't actively using a webpage, the app couldn't easily reauthorize if it locks itself out due to a synchronization issue. It would have to tell the user to reauthorize later, and would stop working in the meantime through no fault of its own.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EOnly thing I\\u0026#39;d disagree with you is for actual OAuth2 applications where user authenticates. The refreshing of refresh_token is part of the RFC, and it does offer something more secure than an infinite refresh_token.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EFrom skimming through the RFC just now, it seems like providing a new refresh token is indeed an optional part of the RFC, but I don\\u0026#39;t think revoking the old refresh token automatically in this case is part of it. (I didn\\u0026#39;t go through the RFC thoroughly just now, so I might be wrong.)\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EI\\u0026#39;m not sure I\\u0026#39;d agree that auto-cycling refresh tokens is more secure. If a bot is always storing the currently-valid refresh token anyway, then anyone who compromises a refresh token (plus the client ID/secret) would still be able to use it indefinitely, by refreshing it themselves. So the compromise would have long-term effects even though the refresh token itself would be auto-revoked.\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EOnly difference between a bot/script and a user OAuth2 application is that you can easily re-authenticate a user, but not so much for bots/scripts\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EIt\\u0026#39;s not necessarily easy to reauthenticate a user with a \\u0026quot;web\\u0026quot;/\\u0026quot;installed\\u0026quot; app. For example, consider a hypothetical app that checks the user\\u0026#39;s reddit inbox periodically and forwards unread messages as emails. Since the use of the user\\u0026#39;s account might happen while the user isn\\u0026#39;t actively using a webpage, the app couldn\\u0026#39;t easily reauthorize if it locks itself out due to a synchronization issue. It would have to tell the user to reauthorize later, and would stop working in the meantime through no fault of its own.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj4pdvj/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj4pdvj\", \"created\": 1610586687.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"snoowrap author\", \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 2, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj3mbjz\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"SpyTec13\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj2szb7\", \"score\": 4, \"author_fullname\": \"t2_7t6gk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Definitely will make it an absolute pain for bots and personal scripts. I'd much prefer having a revocable token as part of the bot/script as it's much better than password and could offer higher ratelimiting. OAuth2 for bots and personal scripts has never been a good solution, but there's nothing else\\n\\nOnly thing I'd disagree with you is for actual OAuth2 applications where user authenticates. The refreshing of `refresh_token` is part of the RFC, and it does offer something more secure than an infinite refresh_token. Only difference between a bot/script and a user OAuth2 application is that you can easily re-authenticate a user, but not so much for bots/scripts\", \"edited\": false, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EDefinitely will make it an absolute pain for bots and personal scripts. I\\u0026#39;d much prefer having a revocable token as part of the bot/script as it\\u0026#39;s much better than password and could offer higher ratelimiting. OAuth2 for bots and personal scripts has never been a good solution, but there\\u0026#39;s nothing else\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EOnly thing I\\u0026#39;d disagree with you is for actual OAuth2 applications where user authenticates. The refreshing of \\u003Ccode\\u003Erefresh_token\\u003C/code\\u003E is part of the RFC, and it does offer something more secure than an infinite refresh_token. Only difference between a bot/script and a user OAuth2 application is that you can easily re-authenticate a user, but not so much for bots/scripts\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj3mbjz/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj3mbjz\", \"created\": 1610562650.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"Snoowrap Developer\", \"treatment_tags\": [], \"created_utc\": 1610533850.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"479b3c48-4ff1-11e7-9919-0e1edcbad3d2\", \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gk1ksbu\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Bandeau\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj2szb7\", \"score\": 2, \"author_fullname\": \"t2_83of3\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"\\u003E For example, if a bot sends a request with a refresh token to get an access token, but then loses network connection before receiving reddit's response, the bot would effectively be locked out because the old refresh token would be revoked and the bot wouldn't have received the new refresh token.\\n\\nHaving a solution for this is absolutely critical for web apps, as the user may not even be present at the moment to authenticate. Eg A post scheduler may fail to post something because it needs the user to return and re-authorize it.\\n\\nThis change will make anything based on the reddit API a lot more brittle. Long term this might even cause apps to request user credentials to solve the issues, users expect things to \\\"just work\\\", which will make everyone less secure.\", \"edited\": false, \"author_flair_css_class\": \"bot-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EFor example, if a bot sends a request with a refresh token to get an access token, but then loses network connection before receiving reddit\\u0026#39;s response, the bot would effectively be locked out because the old refresh token would be revoked and the bot wouldn\\u0026#39;t have received the new refresh token.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EHaving a solution for this is absolutely critical for web apps, as the user may not even be present at the moment to authenticate. Eg A post scheduler may fail to post something because it needs the user to return and re-authorize it.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EThis change will make anything based on the reddit API a lot more brittle. Long term this might even cause apps to request user credentials to solve the issues, users expect things to \\u0026quot;just work\\u0026quot;, which will make everyone less secure.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": true, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gk1ksbu/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gk1ksbu\", \"created\": 1611247228.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"OnlyBlocked Developer\", \"treatment_tags\": [], \"created_utc\": 1611218428.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 0, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 5, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 7, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj921fp\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"not_an_aardvark\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj8eora\", \"score\": 7, \"author_fullname\": \"t2_k83md\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Thanks for the reply.\\n\\n\\u003E Admittedly, there's not a good answer today on this. Storing the refresh token is almost like an API key in terms of conceptual usage, but that's not how refresh tokens are meant to be used.\\n\\nI disagree that this is \\\"not how refresh tokens are meant to be used\\\". The [RFC](https://tools.ietf.org/html/rfc6749#section-6) says, \\\"refresh tokens are typically long-lasting credentials used to request additional access tokens\\\". It seems to me that the storing a refresh token and using it repeatedly would be an appropriate use of a \\\"long-lasting credential\\\". On the other hand, auto-revoking the refresh token after every use would certainly prevent it from being \\\"long-lasting\\\". So I'm having trouble understanding the rationale for auto-revoking, especially since it would come with these major side-effects even after compatibility fixes (e.g. it would make an app's \\\"permanent\\\" access randomly break after a network error).\\n\\n\\u003E There's changes on the horizon that should hopefully finally give an officially sanctioned personal script / bot story that doesn't require the dreaded \\\\`password\\\\` grant type. We hate it as much as y'all do\\n\\nThis sounds great -- something like [GitHub's personal access tokens](https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token) would be very useful for personal use scripts. (Unfortunately, it still wouldn't resolve the synchronization issues for web/installed apps.)\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThanks for the reply.\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EAdmittedly, there\\u0026#39;s not a good answer today on this. Storing the refresh token is almost like an API key in terms of conceptual usage, but that\\u0026#39;s not how refresh tokens are meant to be used.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EI disagree that this is \\u0026quot;not how refresh tokens are meant to be used\\u0026quot;. The \\u003Ca href=\\\"https://tools.ietf.org/html/rfc6749#section-6\\\"\\u003ERFC\\u003C/a\\u003E says, \\u0026quot;refresh tokens are typically long-lasting credentials used to request additional access tokens\\u0026quot;. It seems to me that the storing a refresh token and using it repeatedly would be an appropriate use of a \\u0026quot;long-lasting credential\\u0026quot;. On the other hand, auto-revoking the refresh token after every use would certainly prevent it from being \\u0026quot;long-lasting\\u0026quot;. So I\\u0026#39;m having trouble understanding the rationale for auto-revoking, especially since it would come with these major side-effects even after compatibility fixes (e.g. it would make an app\\u0026#39;s \\u0026quot;permanent\\u0026quot; access randomly break after a network error).\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EThere\\u0026#39;s changes on the horizon that should hopefully finally give an officially sanctioned personal script / bot story that doesn\\u0026#39;t require the dreaded `password` grant type. We hate it as much as y\\u0026#39;all do\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EThis sounds great -- something like \\u003Ca href=\\\"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token\\\"\\u003EGitHub\\u0026#39;s personal access tokens\\u003C/a\\u003E would be very useful for personal use scripts. (Unfortunately, it still wouldn\\u0026#39;t resolve the synchronization issues for web/installed apps.)\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj921fp/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj921fp\", \"created\": 1610676014.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"snoowrap author\", \"treatment_tags\": [], \"created_utc\": 1610647214.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 4, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 6, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gllr0hr\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"securimancer\", \"can_mod_post\": false, \"created_utc\": 1612191068.0, \"send_replies\": true, \"parent_id\": \"t1_gjr800n\", \"score\": 3, \"author_fullname\": \"t2_4pn6u5oy\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Read and acknowledged. Thanks for the thoughtful summary u/not_an_aardvark. I have a feeling we'll be extending the enforcement grace period and we may just get longed live OAuth access token (like Github's personal access token) implemented too.\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": true, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003ERead and acknowledged. Thanks for the thoughtful summary \\u003Ca href=\\\"/u/not_an_aardvark\\\"\\u003Eu/not_an_aardvark\\u003C/a\\u003E. I have a feeling we\\u0026#39;ll be extending the enforcement grace period and we may just get longed live OAuth access token (like Github\\u0026#39;s personal access token) implemented too.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gllr0hr/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gllr0hr\", \"created\": 1612219868.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 5, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": \"admin\"}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gjr800n\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"not_an_aardvark\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj8eora\", \"score\": 6, \"author_fullname\": \"t2_k83md\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Thanks for adding a note about the 3-time retry for synchronization issues. While I don't think it fully resolves the issue, I'm glad the feedback is being acknowledged.\\n\\nThat said, I just want to summarize how this revoke-after-use change appears externally to bot developers. You're:\\n\\n* breaking every app that uses refresh tokens (probably a vast majority of API integrations in existence),\\n* requiring a significant complexity increase for apps to use oauth by making them write to credential storage at runtime,\\n* doing this in violation of the oauth2 RFC (which describes refresh token as \\\"long-lasting credentials\\\"), and\\n* doing all of the above for no apparent reason.\\n\\nIt's possible that you have an internal reason for doing all this, and that it makes all the downsides worthwhile. But given that you haven't shared the reason, this all comes off as fairly capricious. You're much more familiar with the internals of the API than we are, and it's not my job to tell you what you can and can't do with your API, but since I do have some experience with how people integrate with the API, I want to make sure you understand the full scope of how disruptive this change would be.\\n\\nedit: reworded for clarity\", \"edited\": 1611009416.0, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThanks for adding a note about the 3-time retry for synchronization issues. While I don\\u0026#39;t think it fully resolves the issue, I\\u0026#39;m glad the feedback is being acknowledged.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EThat said, I just want to summarize how this revoke-after-use change appears externally to bot developers. You\\u0026#39;re:\\u003C/p\\u003E\\n\\n\\u003Cul\\u003E\\n\\u003Cli\\u003Ebreaking every app that uses refresh tokens (probably a vast majority of API integrations in existence),\\u003C/li\\u003E\\n\\u003Cli\\u003Erequiring a significant complexity increase for apps to use oauth by making them write to credential storage at runtime,\\u003C/li\\u003E\\n\\u003Cli\\u003Edoing this in violation of the oauth2 RFC (which describes refresh token as \\u0026quot;long-lasting credentials\\u0026quot;), and\\u003C/li\\u003E\\n\\u003Cli\\u003Edoing all of the above for no apparent reason.\\u003C/li\\u003E\\n\\u003C/ul\\u003E\\n\\n\\u003Cp\\u003EIt\\u0026#39;s possible that you have an internal reason for doing all this, and that it makes all the downsides worthwhile. But given that you haven\\u0026#39;t shared the reason, this all comes off as fairly capricious. You\\u0026#39;re much more familiar with the internals of the API than we are, and it\\u0026#39;s not my job to tell you what you can and can\\u0026#39;t do with your API, but since I do have some experience with how people integrate with the API, I want to make sure you understand the full scope of how disruptive this change would be.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003Eedit: reworded for clarity\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gjr800n/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gjr800n\", \"created\": 1611031076.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"snoowrap author\", \"treatment_tags\": [], \"created_utc\": 1611002276.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 4, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"af094f1e-4ff1-11e7-93d5-0e570865bba8\", \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj8rrcw\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"SpyTec13\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj8eora\", \"score\": 1, \"author_fullname\": \"t2_7t6gk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Is there any that the upcoming change can't happen alongside this refresh token change?\\n\\nBecause I'd much rather have it be announced at the same time so we can much more easily transition over to it than advice users to use password flow. What's a few more months to a few quarters more when the security benefit is rather small?\", \"edited\": false, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EIs there any that the upcoming change can\\u0026#39;t happen alongside this refresh token change?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EBecause I\\u0026#39;d much rather have it be announced at the same time so we can much more easily transition over to it than advice users to use password flow. What\\u0026#39;s a few more months to a few quarters more when the security benefit is rather small?\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj8rrcw/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj8rrcw\", \"created\": 1610671518.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"Snoowrap Developer\", \"treatment_tags\": [], \"created_utc\": 1610642718.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 4, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj8eora\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"securimancer\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj3d1nr\", \"score\": 3, \"author_fullname\": \"t2_4pn6u5oy\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Admittedly, there's not a good answer today on this. Storing the refresh token is almost like an API key in terms of conceptual usage, but that's not how refresh tokens are meant to be used. There's changes on the horizon that should hopefully finally give an officially sanctioned personal script / bot story that doesn't require the dreaded \\\\`password\\\\` grant type. We hate it as much as y'all do\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": null, \"is_submitter\": true, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EAdmittedly, there\\u0026#39;s not a good answer today on this. Storing the refresh token is almost like an API key in terms of conceptual usage, but that\\u0026#39;s not how refresh tokens are meant to be used. There\\u0026#39;s changes on the horizon that should hopefully finally give an officially sanctioned personal script / bot story that doesn\\u0026#39;t require the dreaded `password` grant type. We hate it as much as y\\u0026#39;all do\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj8eora/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj8eora\", \"created\": 1610665494.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610636694.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 3, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": \"admin\"}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"479b3c48-4ff1-11e7-9919-0e1edcbad3d2\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"479b3c48-4ff1-11e7-9919-0e1edcbad3d2\", \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gkdmlir\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"rhaksw\", \"can_mod_post\": false, \"created_utc\": 1611412488.0, \"send_replies\": true, \"parent_id\": \"t1_gkc5qmi\", \"score\": 1, \"author_fullname\": \"t2_23j8dbfp\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"\\u003E This is referring to the \\\"installed app\\\" app type, which is unrelated to the installed_client grant type.\\n\\nThe \\\"installed app\\\" type uses `installed_client` for [Application Only OAuth](https://github.com/reddit-archive/reddit/wiki/oauth2#application-only-oauth),\\n\\n\\u003E\\u003E `https://oauth.reddit.com/grants/installed_client`:\\n\\n\\u003E\\u003E Installed app types (as these apps are considered \\\"non-confidential\\\", have no secret, and thus, are ineligible for client_credentials grant.\\n\\n\\u0026nbsp;\\n\\n\\u003E My understanding is that this change wouldn't affect the installed_client grant type if it doesn't get refresh tokens, but I don't have much familiarity with the installed_client grant type.\\n\\nOkay, thank you. Another person below [said the same thing](https://www.reddit.com/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkbkclp/?context=1) and I think that must be correct.\", \"edited\": false, \"author_flair_css_class\": \"bot-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EThis is referring to the \\u0026quot;installed app\\u0026quot; app type, which is unrelated to the installed_client grant type.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EThe \\u0026quot;installed app\\u0026quot; type uses \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E for \\u003Ca href=\\\"https://github.com/reddit-archive/reddit/wiki/oauth2#application-only-oauth\\\"\\u003EApplication Only OAuth\\u003C/a\\u003E,\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003E\\u003Ccode\\u003Ehttps://oauth.reddit.com/grants/installed_client\\u003C/code\\u003E:\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EInstalled app types (as these apps are considered \\u0026quot;non-confidential\\u0026quot;, have no secret, and thus, are ineligible for client_credentials grant.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003E\\u0026nbsp;\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EMy understanding is that this change wouldn\\u0026#39;t affect the installed_client grant type if it doesn\\u0026#39;t get refresh tokens, but I don\\u0026#39;t have much familiarity with the installed_client grant type.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EOkay, thank you. Another person below \\u003Ca href=\\\"https://www.reddit.com/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkbkclp/?context=1\\\"\\u003Esaid the same thing\\u003C/a\\u003E and I think that must be correct.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkdmlir/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkdmlir\", \"created\": 1611441288.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"reveddit.com Developer\", \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 5, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gkc5qmi\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"not_an_aardvark\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gkar0v8\", \"score\": 2, \"author_fullname\": \"t2_k83md\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"\\u003E Would you clarify what you mean by \\\"installed\\\"? I thought the `installed_client` grant type does not have refresh tokens per reddit's OAuth2 docs,\\n\\nThis is referring to the [\\\"installed app\\\"](https://github.com/reddit-archive/reddit/wiki/oauth2-app-types#installed-app) app type, which is unrelated to the `installed_client` grant type.\\n\\n\\u003E I agree with your points about synchronization issues. A similar issue might occur when a network's download capacity is saturated while upload capacity is still available. In that case, a few refreshes would be enough to lock out a user.\\n\\n\\u003E Finally, I'm not sure how this new policy would be applied to the `installed_client` grant type.\\n\\nMy understanding is that this change wouldn't affect the `installed_client` grant type if it doesn't get refresh tokens, but I don't have much familiarity with the `installed_client` grant type.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EWould you clarify what you mean by \\u0026quot;installed\\u0026quot;? I thought the \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E grant type does not have refresh tokens per reddit\\u0026#39;s OAuth2 docs,\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EThis is referring to the \\u003Ca href=\\\"https://github.com/reddit-archive/reddit/wiki/oauth2-app-types#installed-app\\\"\\u003E\\u0026quot;installed app\\u0026quot;\\u003C/a\\u003E app type, which is unrelated to the \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E grant type.\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EI agree with your points about synchronization issues. A similar issue might occur when a network\\u0026#39;s download capacity is saturated while upload capacity is still available. In that case, a few refreshes would be enough to lock out a user.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EFinally, I\\u0026#39;m not sure how this new policy would be applied to the \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E grant type.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EMy understanding is that this change wouldn\\u0026#39;t affect the \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E grant type if it doesn\\u0026#39;t get refresh tokens, but I don\\u0026#39;t have much familiarity with the \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E grant type.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkc5qmi/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkc5qmi\", \"created\": 1611425767.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"snoowrap author\", \"treatment_tags\": [], \"created_utc\": 1611396967.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 4, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gkar0v8\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"rhaksw\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj3d1nr\", \"score\": 2, \"author_fullname\": \"t2_23j8dbfp\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"\\u003E But using the password flow isn't an option for \\\"installed\\\" and \\\"web\\\" app types, which have historically used a refresh token as their long-term credential (because there isn't any other long-term credential available to them).\\n\\nWould you clarify what you mean by \\\"installed\\\"? I thought the `installed_client` grant type does not have refresh tokens per reddit's [OAuth2 docs](https://github.com/reddit-archive/reddit/wiki/OAuth2),\\n\\n\\u003E Installed app: Runs on devices you don't control, such as the user's mobile phone. Cannot keep a secret, and therefore, does not receive one.\\n\\n\\u003E ...\\n\\n\\u003E App-only OAuth token requests never receive a refresh_token.\\n\\nI agree with your points about synchronization issues. A similar issue might occur when a network's download capacity is saturated while upload capacity is still available. In that case, a few refreshes would be enough to lock out a user.\\n\\nFinally, I'm not sure how this new policy would be applied to the `installed_client` grant type. I can make a change to my web-app to store access tokens in local storage, but a user can simply open another session or browser. Perhaps it isn't being applied there at all and I'm simply misreading this thread.\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"bot-developer\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EBut using the password flow isn\\u0026#39;t an option for \\u0026quot;installed\\u0026quot; and \\u0026quot;web\\u0026quot; app types, which have historically used a refresh token as their long-term credential (because there isn\\u0026#39;t any other long-term credential available to them).\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EWould you clarify what you mean by \\u0026quot;installed\\u0026quot;? I thought the \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E grant type does not have refresh tokens per reddit\\u0026#39;s \\u003Ca href=\\\"https://github.com/reddit-archive/reddit/wiki/OAuth2\\\"\\u003EOAuth2 docs\\u003C/a\\u003E,\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EInstalled app: Runs on devices you don\\u0026#39;t control, such as the user\\u0026#39;s mobile phone. Cannot keep a secret, and therefore, does not receive one.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E...\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EApp-only OAuth token requests never receive a refresh_token.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EI agree with your points about synchronization issues. A similar issue might occur when a network\\u0026#39;s download capacity is saturated while upload capacity is still available. In that case, a few refreshes would be enough to lock out a user.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EFinally, I\\u0026#39;m not sure how this new policy would be applied to the \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E grant type. I can make a change to my web-app to store access tokens in local storage, but a user can simply open another session or browser. Perhaps it isn\\u0026#39;t being applied there at all and I\\u0026#39;m simply misreading this thread.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkar0v8/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkar0v8\", \"created\": 1611406616.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"reveddit.com Developer\", \"treatment_tags\": [], \"created_utc\": 1611377816.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 3, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj3zcag\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Eabryt\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj3d1nr\", \"score\": 1, \"author_fullname\": \"t2_5z12i\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Causes problem with accounts that have 2FA enabled though. Or at least it did when they first introduced 2FA (which is why I moved my bots to OAuth)\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": null, \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003ECauses problem with accounts that have 2FA enabled though. Or at least it did when they first introduced 2FA (which is why I moved my bots to OAuth)\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj3zcag/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj3zcag\", \"created\": 1610573668.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610544868.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 3, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj3d1nr\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"not_an_aardvark\", \"can_mod_post\": false, \"created_utc\": 1610524445.0, \"send_replies\": true, \"parent_id\": \"t1_gj3beyi\", \"score\": 5, \"author_fullname\": \"t2_k83md\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"If the new official recommendation for personal use scripts is to use the password flow rather than storing a long-term refresh token, then I could live with that (although it seems like a dubious choice from a principle-of-least-privilege perspective).\\n\\nBut using the password flow isn't an option for \\\"installed\\\" and \\\"web\\\" app types, which have historically used a refresh token as their long-term credential (because there isn't any other long-term credential available to them). At best, this change would make credential management much harder for these apps due to the need to repeatedly overwrite the stored tokens. More realistically, it would prevent effective credential management at all due to the synchronization issue discussed above.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EIf the new official recommendation for personal use scripts is to use the password flow rather than storing a long-term refresh token, then I could live with that (although it seems like a dubious choice from a principle-of-least-privilege perspective).\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EBut using the password flow isn\\u0026#39;t an option for \\u0026quot;installed\\u0026quot; and \\u0026quot;web\\u0026quot; app types, which have historically used a refresh token as their long-term credential (because there isn\\u0026#39;t any other long-term credential available to them). At best, this change would make credential management much harder for these apps due to the need to repeatedly overwrite the stored tokens. More realistically, it would prevent effective credential management at all due to the synchronization issue discussed above.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj3d1nr/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj3d1nr\", \"created\": 1610553245.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"snoowrap author\", \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 2, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj3beyi\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"itskdog\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj2szb7\", \"score\": 0, \"author_fullname\": \"t2_o8b49\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"All the tutorials I've seen for bots and scripts go through the script/password flow anyway, from my experience.\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EAll the tutorials I\\u0026#39;ve seen for bots and scripts go through the script/password flow anyway, from my experience.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": true, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj3beyi/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj3beyi\", \"created\": 1610551720.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610522920.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj2szb7\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"not_an_aardvark\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 14, \"author_fullname\": \"t2_k83md\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [{\"giver_coin_reward\": null, \"subreddit_id\": null, \"is_new\": false, \"days_of_drip_extension\": 0, \"coin_price\": 300, \"id\": \"award_68ba1ee3-9baf-4252-be52-b808c1e8bdc4\", \"penny_donate\": null, \"coin_reward\": 250, \"icon_url\": \"https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png\", \"days_of_premium\": 0, \"icon_height\": 2048, \"tiers_by_required_awardings\": {\"0\": {\"resized_static_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=9c0a85437357b987e50ba727b67fcc53b0950c95\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=28657eedaaa67c90c4b4a97d134fe607bb92c975\", \"width\": 128, \"height\": 128}], \"resized_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=9c0a85437357b987e50ba727b67fcc53b0950c95\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=28657eedaaa67c90c4b4a97d134fe607bb92c975\", \"width\": 128, \"height\": 128}], \"static_icon\": {\"url\": \"https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png\", \"width\": 2048, \"height\": 2048, \"format\": null}, \"awardings_required\": 0, \"icon\": {\"url\": \"https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png\", \"width\": 2048, \"height\": 2048, \"format\": \"PNG\"}}, \"9\": {\"resized_static_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/ceeqdqlwgqq51_ThisArgentium.jpg?width=16\\u0026height=16\\u0026auto=webp\\u0026s=cc2d64c1d075d5b56c271e18fa12a2065051431b\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/ceeqdqlwgqq51_ThisArgentium.jpg?width=32\\u0026height=32\\u0026auto=webp\\u0026s=2c7203ff6dd93cbacb44c22f924fd158711a3329\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/ceeqdqlwgqq51_ThisArgentium.jpg?width=48\\u0026height=48\\u0026auto=webp\\u0026s=e5b8f3d232381249734ebd76dd5321d8f291944a\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/ceeqdqlwgqq51_ThisArgentium.jpg?width=64\\u0026height=64\\u0026auto=webp\\u0026s=e5cb76cb109d814185fa542e357c5c0e9aa5036b\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/ceeqdqlwgqq51_ThisArgentium.jpg?width=128\\u0026height=128\\u0026auto=webp\\u0026s=3359c9a307d45b81b095996d03c4ab512cb098a1\", \"width\": 128, \"height\": 128}], \"resized_icons\": [{\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_argentium_512.png\", \"width\": 16, \"height\": 16}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_argentium_512.png\", \"width\": 32, \"height\": 32}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_argentium_512.png\", \"width\": 48, \"height\": 48}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_argentium_512.png\", \"width\": 64, \"height\": 64}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_argentium_512.png\", \"width\": 128, \"height\": 128}], \"static_icon\": {\"url\": \"https://i.redd.it/award_images/t5_q0gj4/ceeqdqlwgqq51_ThisArgentium.jpg\", \"width\": 2048, \"height\": 2048, \"format\": null}, \"awardings_required\": 9, \"icon\": {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_argentium_512.png\", \"width\": 2048, \"height\": 2048, \"format\": \"APNG\"}}, \"3\": {\"resized_static_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=c03d4f83daf03bfc8a4341e2ad6b5a6d3c471cfe\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=8a5328341618fe60ccb2b1ddd32561975793204a\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=957b055444fd6231afb60b58aa95fe74505554f1\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=e4a23a37adf97381673eac6bdd7a52ebc69f8fe4\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=092eed0465f28509f0ab7e9a56cdbf826b812555\", \"width\": 128, \"height\": 128}], \"resized_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=c03d4f83daf03bfc8a4341e2ad6b5a6d3c471cfe\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=8a5328341618fe60ccb2b1ddd32561975793204a\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=957b055444fd6231afb60b58aa95fe74505554f1\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=e4a23a37adf97381673eac6bdd7a52ebc69f8fe4\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=092eed0465f28509f0ab7e9a56cdbf826b812555\", \"width\": 128, \"height\": 128}], \"static_icon\": {\"url\": \"https://i.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png\", \"width\": 2048, \"height\": 2048, \"format\": null}, \"awardings_required\": 3, \"icon\": {\"url\": \"https://i.redd.it/award_images/t5_q0gj4/h9u2ml36hqq51_ThisGold.png\", \"width\": 2048, \"height\": 2048, \"format\": \"PNG\"}}, \"6\": {\"resized_static_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/yx7ed010fqq51_ThisPlatinum.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=76f2f547bdbbf86d19102099ccc024277c7673ef\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/yx7ed010fqq51_ThisPlatinum.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=3cc88e042abbb716b059f9f3c2d58b8667fc5e03\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/yx7ed010fqq51_ThisPlatinum.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=63ce35d010ce32d32a15d792a32cba39f7b95519\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/yx7ed010fqq51_ThisPlatinum.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=ddb817cacf22f2ee855e7263445b8613e8f2a718\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_q0gj4/yx7ed010fqq51_ThisPlatinum.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=39ff319c1aab711b02f581a4b36ecf2663c72463\", \"width\": 128, \"height\": 128}], \"resized_icons\": [{\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_platinum_512.png\", \"width\": 16, \"height\": 16}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_platinum_512.png\", \"width\": 32, \"height\": 32}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_platinum_512.png\", \"width\": 48, \"height\": 48}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_platinum_512.png\", \"width\": 64, \"height\": 64}, {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_platinum_512.png\", \"width\": 128, \"height\": 128}], \"static_icon\": {\"url\": \"https://i.redd.it/award_images/t5_q0gj4/yx7ed010fqq51_ThisPlatinum.png\", \"width\": 2048, \"height\": 2048, \"format\": null}, \"awardings_required\": 6, \"icon\": {\"url\": \"https://www.redditstatic.com/gold/awards/icon/This_platinum_512.png\", \"width\": 2048, \"height\": 2048, \"format\": \"APNG\"}}}, \"resized_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=9c0a85437357b987e50ba727b67fcc53b0950c95\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=28657eedaaa67c90c4b4a97d134fe607bb92c975\", \"width\": 128, \"height\": 128}], \"icon_width\": 2048, \"static_icon_width\": 2048, \"start_date\": null, \"is_enabled\": true, \"awardings_required_to_grant_benefits\": 3, \"description\": \"THIS right here! Join together to give multiple This awards and see the award evolve in its display and shower benefits for the recipient. For every 3 This awards given to a post or comment, the author will get 250 coins.\", \"end_date\": null, \"subreddit_coin_reward\": 0, \"count\": 1, \"static_icon_height\": 2048, \"name\": \"This\", \"resized_static_icons\": [{\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16\\u0026height=16\\u0026auto=webp\\u0026s=9c0a85437357b987e50ba727b67fcc53b0950c95\", \"width\": 16, \"height\": 16}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32\\u0026height=32\\u0026auto=webp\\u0026s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb\", \"width\": 32, \"height\": 32}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48\\u0026height=48\\u0026auto=webp\\u0026s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d\", \"width\": 48, \"height\": 48}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64\\u0026height=64\\u0026auto=webp\\u0026s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6\", \"width\": 64, \"height\": 64}, {\"url\": \"https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128\\u0026height=128\\u0026auto=webp\\u0026s=28657eedaaa67c90c4b4a97d134fe607bb92c975\", \"width\": 128, \"height\": 128}], \"icon_format\": null, \"award_sub_type\": \"GROUP\", \"penny_price\": null, \"award_type\": \"global\", \"static_icon_url\": \"https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png\"}], \"subreddit_id\": \"t5_2qizd\", \"body\": \"\\u003E Going forward, our response will also include a brand new refresh token ...\\n\\u003E\\n\\u003E Since some OAuth2 client implementations might not handle this scenario (whereas [PRAW](https://github.com/praw-dev/prawcore/blob/1db01c55ba4e94084206fb2e01bb6a6e62f998ff/prawcore/auth.py#L164-L165) does, for example), we\\u2019re not immediately enforcing revocation of the consumed refresh token. We\\u2019re looking to enforce this starting in Q2 2021\\n\\nIf I'm understanding correctly, does this mean that every refresh token would be effectively revoked and replaced as soon as it's used to generate an access token?\\n\\nIf so, this would break almost every bot and integration using OAuth2 (including PRAW-based, snoowrap-based, and otherwise). Although PRAW updates the refresh token that it uses at runtime (as shown in the linked code snippet), it doesn't update a refresh token in persistent storage, as discussed in [the other comment thread](https://www.reddit.com/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj19rwe/). The result is that a bot would break as soon as it was rebooted, due to using a stale refresh token.\\n\\nIt's not really realistic for API wrappers to be updated to automatically write refresh tokens in storage, either. There are a large number of ways in which tokens can be stored (in a config file, in a database with a different token for each user, etc). Effectively, it seems like this requires bots to store their credentials in an online config that gets repeatedly updated at runtime. This is pretty different from how long-term credential storage usually works.\\n\\nRequiring users to update their stored refresh tokens at runtime would also create some major sychronization issues. For example, if a bot sends a request with a refresh token to get an access token, but then loses network connection before receiving reddit's response, the bot would effectively be locked out because the old refresh token would be revoked and the bot wouldn't have received the new refresh token. As a result, the app owner would need to make the end user go through the OAuth authentication flow again (or for personal scripts, the app owner would need to manually fix their bot). It's not clear how one would avoid this error, and having a design that can randomly break itself and require manual intervention due to network errors doesn't seem like a good architecture to push on app/bot developers.\\n\\nIf this is implemented, I would likely start recommending that people use the `password` grant type for personal use scripts rather than `refresh_token`, since it would allow for more robust long-term storage of credentials despite the potential issues with storing passwords. The inevitable synchronization lockouts and credential management complexity would make it difficult to recommend \\\"installed\\\" and \\\"web\\\"-type apps at all.\\n\\nIt's not clear what the benefit of this behavior is to justify making it impossible to do reliable credential management. Is there any chance you could reconsider it?\\n\\n\\u003E Also note that all refresh tokens previously had no expiration. We're going to start enforcing a 1 year expiration on refresh tokens to help curb storage for refresh tokens.\\n\\nHave you considered enforcing the expiration at 1 year after last use, rather than at one year after being issued? This seems like it would help solve the storage issue without requiring yearly manual credential-cycling. (This is only relevant if you decide not to do the revocation strategy described above.)\\n\\n---\\n\\nedit: Clarified why using `password` grants instead doesn't solve the problem\", \"edited\": 1610519378.0, \"downs\": 0, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EGoing forward, our response will also include a brand new refresh token ...\\u003C/p\\u003E\\n\\n\\u003Cp\\u003ESince some OAuth2 client implementations might not handle this scenario (whereas \\u003Ca href=\\\"https://github.com/praw-dev/prawcore/blob/1db01c55ba4e94084206fb2e01bb6a6e62f998ff/prawcore/auth.py#L164-L165\\\"\\u003EPRAW\\u003C/a\\u003E does, for example), we\\u2019re not immediately enforcing revocation of the consumed refresh token. We\\u2019re looking to enforce this starting in Q2 2021\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EIf I\\u0026#39;m understanding correctly, does this mean that every refresh token would be effectively revoked and replaced as soon as it\\u0026#39;s used to generate an access token?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EIf so, this would break almost every bot and integration using OAuth2 (including PRAW-based, snoowrap-based, and otherwise). Although PRAW updates the refresh token that it uses at runtime (as shown in the linked code snippet), it doesn\\u0026#39;t update a refresh token in persistent storage, as discussed in \\u003Ca href=\\\"https://www.reddit.com/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj19rwe/\\\"\\u003Ethe other comment thread\\u003C/a\\u003E. The result is that a bot would break as soon as it was rebooted, due to using a stale refresh token.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EIt\\u0026#39;s not really realistic for API wrappers to be updated to automatically write refresh tokens in storage, either. There are a large number of ways in which tokens can be stored (in a config file, in a database with a different token for each user, etc). Effectively, it seems like this requires bots to store their credentials in an online config that gets repeatedly updated at runtime. This is pretty different from how long-term credential storage usually works.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003ERequiring users to update their stored refresh tokens at runtime would also create some major sychronization issues. For example, if a bot sends a request with a refresh token to get an access token, but then loses network connection before receiving reddit\\u0026#39;s response, the bot would effectively be locked out because the old refresh token would be revoked and the bot wouldn\\u0026#39;t have received the new refresh token. As a result, the app owner would need to make the end user go through the OAuth authentication flow again (or for personal scripts, the app owner would need to manually fix their bot). It\\u0026#39;s not clear how one would avoid this error, and having a design that can randomly break itself and require manual intervention due to network errors doesn\\u0026#39;t seem like a good architecture to push on app/bot developers.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EIf this is implemented, I would likely start recommending that people use the \\u003Ccode\\u003Epassword\\u003C/code\\u003E grant type for personal use scripts rather than \\u003Ccode\\u003Erefresh_token\\u003C/code\\u003E, since it would allow for more robust long-term storage of credentials despite the potential issues with storing passwords. The inevitable synchronization lockouts and credential management complexity would make it difficult to recommend \\u0026quot;installed\\u0026quot; and \\u0026quot;web\\u0026quot;-type apps at all.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EIt\\u0026#39;s not clear what the benefit of this behavior is to justify making it impossible to do reliable credential management. Is there any chance you could reconsider it?\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EAlso note that all refresh tokens previously had no expiration. We\\u0026#39;re going to start enforcing a 1 year expiration on refresh tokens to help curb storage for refresh tokens.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EHave you considered enforcing the expiration at 1 year after last use, rather than at one year after being issued? This seems like it would help solve the storage issue without requiring yearly manual credential-cycling. (This is only relevant if you decide not to do the revocation strategy described above.)\\u003C/p\\u003E\\n\\n\\u003Chr/\\u003E\\n\\n\\u003Cp\\u003Eedit: Clarified why using \\u003Ccode\\u003Epassword\\u003C/code\\u003E grants instead doesn\\u0026#39;t solve the problem\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2szb7/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj2szb7\", \"created\": 1610538530.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"snoowrap author\", \"treatment_tags\": [], \"created_utc\": 1610509730.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 5, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"40bbb600-4ff1-11e7-bf1a-0e2aff1d0230\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 4, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj2avs7\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"bboe\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj28ose\", \"score\": 4, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"I think Reddit is talking about storing the token on their end. Until this change, they likely have stored every refresh token ever issued unless it was explicitly revoked. That can significantly add up over time.\\n\\nOnce this change is made, they can purge all tokens over a year old, and after the subsequent Q2 change will be able to expire a refresh token immediately after use.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EI think Reddit is talking about storing the token on their end. Until this change, they likely have stored every refresh token ever issued unless it was explicitly revoked. That can significantly add up over time.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EOnce this change is made, they can purge all tokens over a year old, and after the subsequent Q2 change will be able to expire a refresh token immediately after use.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2avs7/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj2avs7\", \"created\": 1610528722.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"created_utc\": 1610499922.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj8dd4k\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"securimancer\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj28ose\", \"score\": 1, \"author_fullname\": \"t2_4pn6u5oy\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Right, Reddit's storage of refresh tokens. Clarified the post, sorry for the confusion\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": true, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003ERight, Reddit\\u0026#39;s storage of refresh tokens. Clarified the post, sorry for the confusion\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj8dd4k/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj8dd4k\", \"created\": 1610664842.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610636042.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": \"admin\"}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj28ose\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": false, \"author\": \"SirensToGo\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 5, \"author_fullname\": \"t2_e5ihq\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"\\u003E to help curb storage for refresh tokens\\n\\n\\u2026are we not supposed to store refresh tokens? \\n\\nI have an installed application and I store both the access token and the refresh token in the device\\u2019s keystore. While I probably won\\u2019t run into the 1 year issue since it\\u2019d mean a user would need to not launch the app for an entire year (assuming I rotate refresh tokens correctly), but I don\\u2019t entirely understand the point of it given that the authorization was **specifically** indefinite.\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003Eto help curb storage for refresh tokens\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003E\\u2026are we not supposed to store refresh tokens? \\u003C/p\\u003E\\n\\n\\u003Cp\\u003EI have an installed application and I store both the access token and the refresh token in the device\\u2019s keystore. While I probably won\\u2019t run into the 1 year issue since it\\u2019d mean a user would need to not launch the app for an entire year (assuming I rotate refresh tokens correctly), but I don\\u2019t entirely understand the point of it given that the authorization was \\u003Cstrong\\u003Especifically\\u003C/strong\\u003E indefinite.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj28ose/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj28ose\", \"created\": 1610527537.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"mitmproxy, the new reddit documentation\", \"treatment_tags\": [], \"created_utc\": 1610498737.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"40bbb600-4ff1-11e7-bf1a-0e2aff1d0230\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj8dl2i\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"securimancer\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj2p6t7\", \"score\": 3, \"author_fullname\": \"t2_4pn6u5oy\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"We definitely have, it's something that we've talked about doing. We're doing some backend changes to our OAuth2 service and after that's re-platformed, we should hopefully start looking at implementing an API token/key based solution.\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": true, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EWe definitely have, it\\u0026#39;s something that we\\u0026#39;ve talked about doing. We\\u0026#39;re doing some backend changes to our OAuth2 service and after that\\u0026#39;s re-platformed, we should hopefully start looking at implementing an API token/key based solution.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj8dl2i/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj8dl2i\", \"created\": 1610664950.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610636150.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": \"admin\"}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj2p6t7\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Watchful1\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 3, \"author_fullname\": \"t2_d0z23\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"u/securimancer has reddit considered changing the \\\"password\\\" auth flow for script type apps? Other popular API's with this type of application, like discord or twitch bots, can use only the app id and app secret, both available when you create an app in the UI, to login. But reddit requires both of those, as well as your password for this flow.\\n\\nPreviously you could manually retrieve a refresh token and use that in place of the password, but it was still three pieces of information. Now you'll have to either keep a constantly changing secret somewhere or store your password, which is considerably more sensitive.\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003E\\u003Ca href=\\\"/u/securimancer\\\"\\u003Eu/securimancer\\u003C/a\\u003E has reddit considered changing the \\u0026quot;password\\u0026quot; auth flow for script type apps? Other popular API\\u0026#39;s with this type of application, like discord or twitch bots, can use only the app id and app secret, both available when you create an app in the UI, to login. But reddit requires both of those, as well as your password for this flow.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EPreviously you could manually retrieve a refresh token and use that in place of the password, but it was still three pieces of information. Now you\\u0026#39;ll have to either keep a constantly changing secret somewhere or store your password, which is considerably more sensitive.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": true, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2p6t7/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj2p6t7\", \"created\": 1610536384.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"RemindMeBot \\u0026 UpdateMeBot\", \"treatment_tags\": [], \"created_utc\": 1610507584.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gjphys7\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Pyprohly\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 2, \"author_fullname\": \"t2_4x25quk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"This change nerfs the refresh token grant and I don\\u2019t like it. The IETF are [trying to get rid of the password flow][ietf] but the new change gives the refresh token grant an unfortunate caveat compared to the password grant. Could we at least please get the \\u201cexpiration at 1 year after last use\\u201d idea /u/not_an_aardvark has suggested? Why is it so difficult to store refresh tokens anyway?\\n\\n[ietf]: https://tools.ietf.org/html/draft-ietf-oauth-security-topics-13#section-3.4\\n\\nAlso, on a side note, while changes are being made to the refresh token flow, could scope limiting be implemented on the refresh token grant :P I.e., add support for that optional `scope` parameter mentioned in [section 6 of RFC 6749][section6].\\n\\n[section6]: https://tools.ietf.org/html/rfc6749#section-6\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": null, \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThis change nerfs the refresh token grant and I don\\u2019t like it. The IETF are \\u003Ca href=\\\"https://tools.ietf.org/html/draft-ietf-oauth-security-topics-13#section-3.4\\\"\\u003Etrying to get rid of the password flow\\u003C/a\\u003E but the new change gives the refresh token grant an unfortunate caveat compared to the password grant. Could we at least please get the \\u201cexpiration at 1 year after last use\\u201d idea \\u003Ca href=\\\"/u/not_an_aardvark\\\"\\u003E/u/not_an_aardvark\\u003C/a\\u003E has suggested? Why is it so difficult to store refresh tokens anyway?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EAlso, on a side note, while changes are being made to the refresh token flow, could scope limiting be implemented on the refresh token grant :P I.e., add support for that optional \\u003Ccode\\u003Escope\\u003C/code\\u003E parameter mentioned in \\u003Ca href=\\\"https://tools.ietf.org/html/rfc6749#section-6\\\"\\u003Esection 6 of RFC 6749\\u003C/a\\u003E.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gjphys7/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gjphys7\", \"created\": 1610993571.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610964771.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"af094f1e-4ff1-11e7-93d5-0e570865bba8\", \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj1pxm2\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"SpyTec13\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 3, \"author_fullname\": \"t2_7t6gk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Good change! Though it gives me more work, bad! \\ud83d\\udc40\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EGood change! Though it gives me more work, bad! \\ud83d\\udc40\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj1pxm2/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj1pxm2\", \"created\": 1610518046.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"Snoowrap Developer\", \"treatment_tags\": [], \"created_utc\": 1610489246.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"40bbb600-4ff1-11e7-bf1a-0e2aff1d0230\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"40bbb600-4ff1-11e7-bf1a-0e2aff1d0230\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gj6bl5r\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"RemindMeBot\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj2wpe3\", \"score\": 1, \"author_fullname\": \"t2_gbm4p\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"There is a 20 hour delay fetching comments.\\n\\nI will be messaging you in 1 day on [**2021-01-14 04:25:17 UTC**](http://www.wolframalpha.com/input/?i=2021-01-14%2004:25:17%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2wpe3/?context=3)\\n\\n[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026subject=Reminder\\u0026message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fredditdev%2Fcomments%2Fkvzaot%2Foauth2_api_changes_upcoming%2Fgj2wpe3%2F%5D%0A%0ARemindMe%21%202021-01-14%2004%3A25%3A17%20UTC) to send a PM to also be reminded and to reduce spam.\\n\\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026subject=Delete%20Comment\\u0026message=Delete%21%20kvzaot)\\n\\n*****\\n\\n|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026subject=Reminder\\u0026message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026subject=List%20Of%20Reminders\\u0026message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1\\u0026subject=RemindMeBot%20Feedback)|\\n|-|-|-|-|\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": null, \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThere is a 20 hour delay fetching comments.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EI will be messaging you in 1 day on \\u003Ca href=\\\"http://www.wolframalpha.com/input/?i=2021-01-14%2004:25:17%20UTC%20To%20Local%20Time\\\"\\u003E\\u003Cstrong\\u003E2021-01-14 04:25:17 UTC\\u003C/strong\\u003E\\u003C/a\\u003E to remind you of \\u003Ca href=\\\"https://np.reddit.com/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2wpe3/?context=3\\\"\\u003E\\u003Cstrong\\u003Ethis link\\u003C/strong\\u003E\\u003C/a\\u003E\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u003Ca href=\\\"https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026amp;subject=Reminder\\u0026amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fredditdev%2Fcomments%2Fkvzaot%2Foauth2_api_changes_upcoming%2Fgj2wpe3%2F%5D%0A%0ARemindMe%21%202021-01-14%2004%3A25%3A17%20UTC\\\"\\u003E\\u003Cstrong\\u003ECLICK THIS LINK\\u003C/strong\\u003E\\u003C/a\\u003E to send a PM to also be reminded and to reduce spam.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u003Csup\\u003EParent commenter can \\u003C/sup\\u003E \\u003Ca href=\\\"https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026amp;subject=Delete%20Comment\\u0026amp;message=Delete%21%20kvzaot\\\"\\u003E\\u003Csup\\u003Edelete this message to hide from others.\\u003C/sup\\u003E\\u003C/a\\u003E\\u003C/p\\u003E\\n\\n\\u003Chr/\\u003E\\n\\n\\u003Ctable\\u003E\\u003Cthead\\u003E\\n\\u003Ctr\\u003E\\n\\u003Cth\\u003E\\u003Ca href=\\\"https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/\\\"\\u003E\\u003Csup\\u003EInfo\\u003C/sup\\u003E\\u003C/a\\u003E\\u003C/th\\u003E\\n\\u003Cth\\u003E\\u003Ca href=\\\"https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026amp;subject=Reminder\\u0026amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here\\\"\\u003E\\u003Csup\\u003ECustom\\u003C/sup\\u003E\\u003C/a\\u003E\\u003C/th\\u003E\\n\\u003Cth\\u003E\\u003Ca href=\\\"https://np.reddit.com/message/compose/?to=RemindMeBot\\u0026amp;subject=List%20Of%20Reminders\\u0026amp;message=MyReminders%21\\\"\\u003E\\u003Csup\\u003EYour Reminders\\u003C/sup\\u003E\\u003C/a\\u003E\\u003C/th\\u003E\\n\\u003Cth\\u003E\\u003Ca href=\\\"https://np.reddit.com/message/compose/?to=Watchful1\\u0026amp;subject=RemindMeBot%20Feedback\\\"\\u003E\\u003Csup\\u003EFeedback\\u003C/sup\\u003E\\u003C/a\\u003E\\u003C/th\\u003E\\n\\u003C/tr\\u003E\\n\\u003C/thead\\u003E\\u003Ctbody\\u003E\\n\\u003C/tbody\\u003E\\u003C/table\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": true, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj6bl5r/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj6bl5r\", \"created\": 1610613066.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610584266.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 6, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj2wpe3\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"OsrsNeedsF2P\", \"can_mod_post\": false, \"created_utc\": 1610511917.0, \"send_replies\": true, \"parent_id\": \"t1_gj2dulp\", \"score\": 1, \"author_fullname\": \"t2_ky1mo\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"!RemindMe 24 hours\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003E!RemindMe 24 hours\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2wpe3/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj2wpe3\", \"created\": 1610540717.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 5, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj2dulp\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"mershed_perderders\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj1hlms\", \"score\": 3, \"author_fullname\": \"t2_4zg39\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"As a PRAW user (that uses praw.ini), what would I need to do in the soon-ish future on my end to ensure compliance with this change?\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EAs a PRAW user (that uses praw.ini), what would I need to do in the soon-ish future on my end to ensure compliance with this change?\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2dulp/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj2dulp\", \"created\": 1610530330.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1610501530.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 4, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"40bbb600-4ff1-11e7-bf1a-0e2aff1d0230\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 3, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gli73gs\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"bboe\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_glhvp4n\", \"score\": 1, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Thanks for the feedback. We don't have anything definitive in place, but I think we would do three things:\\n\\n1) Remove `refresh_token` from praw.ini since it's no longer a static value.\\n\\n2) While we could keep the method to provide the refresh token as an argument to `praw.Reddit`, we're going to need a way to manually update the token on an existing instance, so we'll likely only provide the latter.\\n\\n3) Finally, we'll need a way to register a callback function to be called every time the refresh token is changed. That way users, such as yourself, can store the refresh token however you please.\\n\\nThe major downside to this change, however, is that only a single instance of `praw.Reddit` will be able to use the access token, so if you use multiple scripts with the same bot, there could be a race condition to use the saved refresh token. Given this, it might make sense to also allow the access token to also be set and saved on change.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThanks for the feedback. We don\\u0026#39;t have anything definitive in place, but I think we would do three things:\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E1) Remove \\u003Ccode\\u003Erefresh_token\\u003C/code\\u003E from praw.ini since it\\u0026#39;s no longer a static value.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E2) While we could keep the method to provide the refresh token as an argument to \\u003Ccode\\u003Epraw.Reddit\\u003C/code\\u003E, we\\u0026#39;re going to need a way to manually update the token on an existing instance, so we\\u0026#39;ll likely only provide the latter.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E3) Finally, we\\u0026#39;ll need a way to register a callback function to be called every time the refresh token is changed. That way users, such as yourself, can store the refresh token however you please.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EThe major downside to this change, however, is that only a single instance of \\u003Ccode\\u003Epraw.Reddit\\u003C/code\\u003E will be able to use the access token, so if you use multiple scripts with the same bot, there could be a race condition to use the saved refresh token. Given this, it might make sense to also allow the access token to also be set and saved on change.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gli73gs/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gli73gs\", \"created\": 1612147053.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"created_utc\": 1612118253.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 7, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gli8lx1\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"CAM-Gerlach\", \"can_mod_post\": false, \"created_utc\": 1612118940.0, \"send_replies\": true, \"parent_id\": \"t1_gli8j2q\", \"score\": 2, \"author_fullname\": \"t2_3l5exhk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Thanks, will do!\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThanks, will do!\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gli8lx1/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gli8lx1\", \"created\": 1612147740.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 8, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gli8j2q\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"bboe\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_glhvp4n\", \"score\": 1, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"I just created this issue on PRAW: https://github.com/praw-dev/praw/issues/1630\\n\\nPlease follow up with concerns or additional ideas there.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EI just created this issue on PRAW: \\u003Ca href=\\\"https://github.com/praw-dev/praw/issues/1630\\\"\\u003Ehttps://github.com/praw-dev/praw/issues/1630\\u003C/a\\u003E\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EPlease follow up with concerns or additional ideas there.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gli8j2q/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gli8j2q\", \"created\": 1612147704.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"created_utc\": 1612118904.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 7, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"glhvp4n\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"CAM-Gerlach\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj2xcsx\", \"score\": 2, \"author_fullname\": \"t2_3l5exhk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Thanks much for your attention to this (and for creating PRAW, of course!)\\n\\nUnfortunately, without a suitable replacement for this feature on Reddit's side (e.g. something like Github's personal access tokens), as I understand it cause serious security problems for many use cases. For example, we at r/SpaceX use PRAW for multiple bots that we rely on for critical, core sub functionality, including post approval/moderation, managing megathreads, syncing and updating the topbar, sidebar, thread OPs and wiki pages, generating our automod config, and much more.\\n\\nBy sub policy, all mod accounts are required to have 2FA enabled, as prior to such we have been the target of multiple attempted and at least one successful intrusion due to account compromise; beyond just disruption of the sub itself, attackers could stand to gain access to a considerable amount of personal, confidential and potentially even legally-protected information (e.g. ITAR).\\n\\nAs I understand it, without refresh tokens for authentication, we would be stuck with password authentication, which right off the bat would prevent us from using 2FA on any accounts used with our bot, making compromise via a keylogger by any mods who manually log in to them (which is occasionally required, at least to modify app permissions and other such config).\\n\\nFurthermore, any compromise of our server, its backups, etc. would give an attacker complete access to all bot accounts, able to do anything these please, and giving us no means of regaining control. With refresh tokens we are able to drastically limit their scope and thus potential damage, and if one is compromised, we can simply revoke it and generate a new one, since we still have control of the account via its password and 2FA.\\n\\nFinally, particularly for shared non-mod accounts for which we regenerate the password frequently to limit the damage of compromise or untrustworthyness of any user, having a refresh token gives our bots consistent access to it, so that they don't need to be updated (or break) every time the password is changed.\\n\\nHow does what you're suggesting fit with our use case? Right now, our plan until Reddit introduces a proper solution to this (along the lines of personal access tokens) is to have our bots update the `praw.ini` file with their new refresh tokens, and make sure each uses its own account to avoid sync/concurrency issues. Is this the approach you would recommend, and how would what you're proposing impact that?\\n\\nHappy to open an issue on Github, and possibly a PR down the road, if you'd rather discuss it there. Thanks!\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": null, \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThanks much for your attention to this (and for creating PRAW, of course!)\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EUnfortunately, without a suitable replacement for this feature on Reddit\\u0026#39;s side (e.g. something like Github\\u0026#39;s personal access tokens), as I understand it cause serious security problems for many use cases. For example, we at \\u003Ca href=\\\"/r/SpaceX\\\"\\u003Er/SpaceX\\u003C/a\\u003E use PRAW for multiple bots that we rely on for critical, core sub functionality, including post approval/moderation, managing megathreads, syncing and updating the topbar, sidebar, thread OPs and wiki pages, generating our automod config, and much more.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EBy sub policy, all mod accounts are required to have 2FA enabled, as prior to such we have been the target of multiple attempted and at least one successful intrusion due to account compromise; beyond just disruption of the sub itself, attackers could stand to gain access to a considerable amount of personal, confidential and potentially even legally-protected information (e.g. ITAR).\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EAs I understand it, without refresh tokens for authentication, we would be stuck with password authentication, which right off the bat would prevent us from using 2FA on any accounts used with our bot, making compromise via a keylogger by any mods who manually log in to them (which is occasionally required, at least to modify app permissions and other such config).\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EFurthermore, any compromise of our server, its backups, etc. would give an attacker complete access to all bot accounts, able to do anything these please, and giving us no means of regaining control. With refresh tokens we are able to drastically limit their scope and thus potential damage, and if one is compromised, we can simply revoke it and generate a new one, since we still have control of the account via its password and 2FA.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EFinally, particularly for shared non-mod accounts for which we regenerate the password frequently to limit the damage of compromise or untrustworthyness of any user, having a refresh token gives our bots consistent access to it, so that they don\\u0026#39;t need to be updated (or break) every time the password is changed.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EHow does what you\\u0026#39;re suggesting fit with our use case? Right now, our plan until Reddit introduces a proper solution to this (along the lines of personal access tokens) is to have our bots update the \\u003Ccode\\u003Epraw.ini\\u003C/code\\u003E file with their new refresh tokens, and make sure each uses its own account to avoid sync/concurrency issues. Is this the approach you would recommend, and how would what you\\u0026#39;re proposing impact that?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EHappy to open an issue on Github, and possibly a PR down the road, if you\\u0026#39;d rather discuss it there. Thanks!\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/glhvp4n/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_glhvp4n\", \"created\": 1612141887.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1612113087.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 6, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gli5cj2\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"CAM-Gerlach\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj2xcsx\", \"score\": 2, \"author_fullname\": \"t2_3l5exhk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Also, unless and until a version of PRAW is released with the ability to serialize the refresh token to persistent storage on its own, how would you suggest we do so, presuming our bot runs e.g. every minute, creating a new `reddit` instance each time (but running in a loop within the same Python interpreter process)?\\n\\nThe only way I can think of to do so (without monkey-patching PRAW itself) is to check at the end of every run whether `reddit._core._authorizer.refresh_token == reddit.config.refresh_token`, and then writing it to the config, either to bot's config if it reads in settings manually every run, or with `reddit.config.CONFIG[site_name][\\\"refresh_token\\\"] = reddit._core._authorizer.refresh_token` so that new reddit objects in the same interpreter have updated credentials, and loading, updating and rewriting the desired `praw.ini` config file so that future ones do.\\n\\nHowever, that uses private, undocumented attributes to get the updated refresh token, which I'd obviously like to avoid but I'm not sure a way around it, and is not particularly elegant overall. Thoughts? Thanks!\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": null, \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EAlso, unless and until a version of PRAW is released with the ability to serialize the refresh token to persistent storage on its own, how would you suggest we do so, presuming our bot runs e.g. every minute, creating a new \\u003Ccode\\u003Ereddit\\u003C/code\\u003E instance each time (but running in a loop within the same Python interpreter process)?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EThe only way I can think of to do so (without monkey-patching PRAW itself) is to check at the end of every run whether \\u003Ccode\\u003Ereddit._core._authorizer.refresh_token == reddit.config.refresh_token\\u003C/code\\u003E, and then writing it to the config, either to bot\\u0026#39;s config if it reads in settings manually every run, or with \\u003Ccode\\u003Ereddit.config.CONFIG[site_name][\\u0026quot;refresh_token\\u0026quot;] = reddit._core._authorizer.refresh_token\\u003C/code\\u003E so that new reddit objects in the same interpreter have updated credentials, and loading, updating and rewriting the desired \\u003Ccode\\u003Epraw.ini\\u003C/code\\u003E config file so that future ones do.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EHowever, that uses private, undocumented attributes to get the updated refresh token, which I\\u0026#39;d obviously like to avoid but I\\u0026#39;m not sure a way around it, and is not particularly elegant overall. Thoughts? Thanks!\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gli5cj2/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gli5cj2\", \"created\": 1612146267.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1612117467.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 6, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj2xcsx\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"bboe\", \"can_mod_post\": false, \"created_utc\": 1610512311.0, \"send_replies\": true, \"parent_id\": \"t1_gj2nhiy\", \"score\": 3, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"\\u003E In my opinion, PRAW should consider just completely removing the ability to specify a refresh token at the config file level instead of trying to write it out each time.\\n\\nI think that might be the best course of action too.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EIn my opinion, PRAW should consider just completely removing the ability to specify a refresh token at the config file level instead of trying to write it out each time.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EI think that might be the best course of action too.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2xcsx/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj2xcsx\", \"created\": 1610541111.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 5, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj2nhiy\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Watchful1\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj1hlms\", \"score\": 3, \"author_fullname\": \"t2_d0z23\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Thinking about this more, while this would be useful, I'm not sure if it would actually solve my use case. I keep a copy of my praw.ini file locally and on the server I run my bots on. So running something on the server would result in an updated token in the file there and my file locally being out of date, and vice versa.\\n\\nI could do a whole two way sync to keep both files with the latest token for each account, but I think it's fairly clear that this is no longer the intended use of refresh tokens. I already keep a bunch of secrets in there, it won't be a big deal to just add the actual password too.\\n\\nIn my opinion, PRAW should consider just completely removing the ability to specify a refresh token at the config file level instead of trying to write it out each time.\", \"edited\": false, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThinking about this more, while this would be useful, I\\u0026#39;m not sure if it would actually solve my use case. I keep a copy of my praw.ini file locally and on the server I run my bots on. So running something on the server would result in an updated token in the file there and my file locally being out of date, and vice versa.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EI could do a whole two way sync to keep both files with the latest token for each account, but I think it\\u0026#39;s fairly clear that this is no longer the intended use of refresh tokens. I already keep a bunch of secrets in there, it won\\u0026#39;t be a big deal to just add the actual password too.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EIn my opinion, PRAW should consider just completely removing the ability to specify a refresh token at the config file level instead of trying to write it out each time.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": true, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj2nhiy/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj2nhiy\", \"created\": 1610535474.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"RemindMeBot \\u0026 UpdateMeBot\", \"treatment_tags\": [], \"created_utc\": 1610506674.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 4, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj1hlms\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"bboe\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj1d655\", \"score\": 3, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"At present, no. I think given this change it might make sense to allow updating only the refresh token portion of `praw.ini` if explicitly told to do so. Would you like to make a PR?\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EAt present, no. I think given this change it might make sense to allow updating only the refresh token portion of \\u003Ccode\\u003Epraw.ini\\u003C/code\\u003E if explicitly told to do so. Would you like to make a PR?\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj1hlms/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj1hlms\", \"created\": 1610514224.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"created_utc\": 1610485424.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 3, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj1d655\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Watchful1\", \"can_mod_post\": false, \"created_utc\": 1610483418.0, \"send_replies\": true, \"parent_id\": \"t1_gj1cm7v\", \"score\": 1, \"author_fullname\": \"t2_d0z23\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Does praw write to praw.ini files at all? Otherwise this might be a problem. I have like twenty different tokens in my file, I would probably have to switch to username/password instead.\", \"edited\": false, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EDoes praw write to praw.ini files at all? Otherwise this might be a problem. I have like twenty different tokens in my file, I would probably have to switch to username/password instead.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": true, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj1d655/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj1d655\", \"created\": 1610512218.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"RemindMeBot \\u0026 UpdateMeBot\", \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 2, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj1cm7v\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"bboe\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gj19rwe\", \"score\": 3, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"No, `praw.ini` is not automatically updated.\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003ENo, \\u003Ccode\\u003Epraw.ini\\u003C/code\\u003E is not automatically updated.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj1cm7v/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj1cm7v\", \"created\": 1610511963.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"created_utc\": 1610483163.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gj19rwe\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Watchful1\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 2, \"author_fullname\": \"t2_d0z23\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"This looks like a good change. I've always wondered why refresh tokens never expired.\\n\\nu/bboe, do you know if that code line securimancer linked to results in updating the praw.ini file with the new refresh token? I guess this will be a major incentive to using praw.ini files instead of running your own configs.\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"lib-developer\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EThis looks like a good change. I\\u0026#39;ve always wondered why refresh tokens never expired.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u003Ca href=\\\"/u/bboe\\\"\\u003Eu/bboe\\u003C/a\\u003E, do you know if that code line securimancer linked to results in updating the praw.ini file with the new refresh token? I guess this will be a major incentive to using praw.ini files instead of running your own configs.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": true, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gj19rwe/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gj19rwe\", \"created\": 1610510659.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"RemindMeBot \\u0026 UpdateMeBot\", \"treatment_tags\": [], \"created_utc\": 1610481859.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"479b3c48-4ff1-11e7-9919-0e1edcbad3d2\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"479b3c48-4ff1-11e7-9919-0e1edcbad3d2\", \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": \"479b3c48-4ff1-11e7-9919-0e1edcbad3d2\", \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gkbut5h\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"rhaksw\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gkbtbi2\", \"score\": 1, \"author_fullname\": \"t2_23j8dbfp\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Alright, thank you for pointing that out!\", \"edited\": false, \"author_flair_css_class\": \"bot-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EAlright, thank you for pointing that out!\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkbut5h/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkbut5h\", \"created\": 1611422302.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"reveddit.com Developer\", \"treatment_tags\": [], \"created_utc\": 1611393502.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 4, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gkbtbi2\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Pyprohly\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gkbsl09\", \"score\": 2, \"author_fullname\": \"t2_4x25quk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Not the whole post, just the stuff under the \\u2018Authorization Code Reuse\\u2019 heading is not applicable to the installed client flow/grant.\\n\\n\\u003E Finally, I'm not sure how this new policy would be applied to the installed_client grant type.\\n\\nYea, I dunno what all the chatter about the installed client grant is about since you can\\u2019t get a refresh token from it.\\n\\n**Edit:** Wait actually I remember now, you can get a refresh token from install client credentials by using the authorisation code flow on it. So you can get an installed client refresh token. The installed client grant itself doesn\\u2019t produce a refresh token. So it\\u2019s actually a good point that that other person made since installed clients don\\u2019t usually change often :p\\n\\nRegardless, the auth code isn\\u2019t something that\\u2019s meant to be shared. It exists only very temporarily until you get your access/refresh tokens.\", \"edited\": 1611393845.0, \"downs\": 0, \"author_flair_css_class\": null, \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003ENot the whole post, just the stuff under the \\u2018Authorization Code Reuse\\u2019 heading is not applicable to the installed client flow/grant.\\u003C/p\\u003E\\n\\n\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EFinally, I\\u0026#39;m not sure how this new policy would be applied to the installed_client grant type.\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EYea, I dunno what all the chatter about the installed client grant is about since you can\\u2019t get a refresh token from it.\\u003C/p\\u003E\\n\\n\\u003Cp\\u003E\\u003Cstrong\\u003EEdit:\\u003C/strong\\u003E Wait actually I remember now, you can get a refresh token from install client credentials by using the authorisation code flow on it. So you can get an installed client refresh token. The installed client grant itself doesn\\u2019t produce a refresh token. So it\\u2019s actually a good point that that other person made since installed clients don\\u2019t usually change often :p\\u003C/p\\u003E\\n\\n\\u003Cp\\u003ERegardless, the auth code isn\\u2019t something that\\u2019s meant to be shared. It exists only very temporarily until you get your access/refresh tokens.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkbtbi2/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkbtbi2\", \"created\": 1611421870.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1611393070.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 3, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gkbsl09\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"rhaksw\", \"can_mod_post\": false, \"created_utc\": 1611392852.0, \"send_replies\": true, \"parent_id\": \"t1_gkbkclp\", \"score\": 1, \"author_fullname\": \"t2_23j8dbfp\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Do you mean this post only applies when you use `grant_type=authorization_code` and not when using `grant_type=https://oauth.reddit.com/grants/installed_client`?\\n\\nThat wasn't clear when I first read through it, since others are talking about \\\"installed\\\" apps. Maybe that word is overloaded.\", \"edited\": false, \"author_flair_css_class\": \"bot-developer\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EDo you mean this post only applies when you use \\u003Ccode\\u003Egrant_type=authorization_code\\u003C/code\\u003E and not when using \\u003Ccode\\u003Egrant_type=https://oauth.reddit.com/grants/installed_client\\u003C/code\\u003E?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EThat wasn\\u0026#39;t clear when I first read through it, since others are talking about \\u0026quot;installed\\u0026quot; apps. Maybe that word is overloaded.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkbsl09/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkbsl09\", \"created\": 1611421652.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"reveddit.com Developer\", \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 2, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gkbkclp\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"Pyprohly\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_gkavpal\", \"score\": 1, \"author_fullname\": \"t2_4x25quk\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"Um, the authorisation code is only applicable to the authorisation code flow.\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EUm, the authorisation code is only applicable to the authorisation code flow.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkbkclp/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkbkclp\", \"created\": 1611419190.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1611390390.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"gkavpal\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"rhaksw\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 1, \"author_fullname\": \"t2_23j8dbfp\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"\\u003E If, within an auth code's 10 minute TTL, that same auth code is attempted to be used again, we will revoke any tokens issued with said auth code\\n\\nYou mean the token's TTL?\\n\\nWill you exempt installed apps using the grant type `installed_client` from this policy? With that grant type there is no way to share the token, for example when two people on the same network simultaneously access the same app.\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"bot-developer\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cblockquote\\u003E\\n\\u003Cp\\u003EIf, within an auth code\\u0026#39;s 10 minute TTL, that same auth code is attempted to be used again, we will revoke any tokens issued with said auth code\\u003C/p\\u003E\\n\\u003C/blockquote\\u003E\\n\\n\\u003Cp\\u003EYou mean the token\\u0026#39;s TTL?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EWill you exempt installed apps using the grant type \\u003Ccode\\u003Einstalled_client\\u003C/code\\u003E from this policy? With that grant type there is no way to share the token, for example when two people on the same network simultaneously access the same app.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gkavpal/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gkavpal\", \"created\": 1611408337.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"reveddit.com Developer\", \"treatment_tags\": [], \"created_utc\": 1611379537.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}, {\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 1, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": {\"kind\": \"Listing\", \"data\": {\"modhash\": null, \"dist\": null, \"children\": [{\"kind\": \"t1\", \"data\": {\"total_awards_received\": 0, \"approved_at_utc\": null, \"comment_type\": null, \"awarders\": [], \"mod_reason_by\": null, \"banned_by\": null, \"ups\": 2, \"author_flair_type\": \"text\", \"removal_reason\": null, \"link_id\": \"t3_kvzaot\", \"author_flair_template_id\": null, \"likes\": null, \"replies\": \"\", \"user_reports\": [], \"saved\": false, \"id\": \"gm0e0zh\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"bboe\", \"can_mod_post\": false, \"created_utc\": 1612459696.0, \"send_replies\": true, \"parent_id\": \"t1_glziwvq\", \"score\": 2, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Great thanks! Is there any way to opt-in to the behavior sooner with an extra header or parameter?\", \"edited\": false, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EGreat thanks! Is there any way to opt-in to the behavior sooner with an extra header or parameter?\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/gm0e0zh/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_gm0e0zh\", \"created\": 1612488496.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"collapsed\": false, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 2, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"glziwvq\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"securimancer\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t1_glyokiw\", \"score\": 2, \"author_fullname\": \"t2_4pn6u5oy\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"collapsed\": false, \"body\": \"February 15th is when we rollout the non-enforced change, so not quite deployed yet.\", \"edited\": false, \"author_flair_css_class\": null, \"is_submitter\": true, \"downs\": 0, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EFebruary 15th is when we rollout the non-enforced change, so not quite deployed yet.\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": null, \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/glziwvq/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_glziwvq\", \"created\": 1612475330.0, \"subreddit\": \"redditdev\", \"author_flair_text\": null, \"treatment_tags\": [], \"created_utc\": 1612446530.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 1, \"author_flair_background_color\": null, \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": \"admin\"}}], \"after\": null, \"before\": null}}, \"user_reports\": [], \"saved\": false, \"id\": \"glyokiw\", \"banned_at_utc\": null, \"mod_reason_title\": null, \"gilded\": 0, \"archived\": false, \"no_follow\": true, \"author\": \"bboe\", \"can_mod_post\": false, \"send_replies\": true, \"parent_id\": \"t3_kvzaot\", \"score\": 1, \"author_fullname\": \"t2_3pz6e\", \"report_reasons\": null, \"approved_by\": null, \"all_awardings\": [], \"subreddit_id\": \"t5_2qizd\", \"body\": \"Hi u/securimancer,\\n\\nI'm working on implementing support for changing `refresh_tokens`, but I've noticed that the responses from `https://www.reddit.com/api/v1/access_token` for `grant_type=refresh_token` aren't actually returning a new refresh token as described. Was this initial rollout put on hold?\\n\\nThanks!\", \"edited\": false, \"downs\": 0, \"author_flair_css_class\": \"\", \"is_submitter\": false, \"collapsed\": false, \"author_flair_richtext\": [], \"author_patreon_flair\": false, \"body_html\": \"\\u003Cdiv class=\\\"md\\\"\\u003E\\u003Cp\\u003EHi \\u003Ca href=\\\"/u/securimancer\\\"\\u003Eu/securimancer\\u003C/a\\u003E,\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EI\\u0026#39;m working on implementing support for changing \\u003Ccode\\u003Erefresh_tokens\\u003C/code\\u003E, but I\\u0026#39;ve noticed that the responses from \\u003Ccode\\u003Ehttps://www.reddit.com/api/v1/access_token\\u003C/code\\u003E for \\u003Ccode\\u003Egrant_type=refresh_token\\u003C/code\\u003E aren\\u0026#39;t actually returning a new refresh token as described. Was this initial rollout put on hold?\\u003C/p\\u003E\\n\\n\\u003Cp\\u003EThanks!\\u003C/p\\u003E\\n\\u003C/div\\u003E\", \"gildings\": {}, \"collapsed_reason\": null, \"associated_award\": null, \"stickied\": false, \"author_premium\": false, \"subreddit_type\": \"public\", \"can_gild\": true, \"top_awarded_type\": null, \"author_flair_text_color\": \"dark\", \"score_hidden\": false, \"permalink\": \"/r/redditdev/comments/kvzaot/oauth2_api_changes_upcoming/glyokiw/\", \"num_reports\": null, \"locked\": false, \"name\": \"t1_glyokiw\", \"created\": 1612451223.0, \"subreddit\": \"redditdev\", \"author_flair_text\": \"PRAW Author\", \"treatment_tags\": [], \"created_utc\": 1612422423.0, \"subreddit_name_prefixed\": \"r/redditdev\", \"controversiality\": 0, \"depth\": 0, \"author_flair_background_color\": \"\", \"collapsed_because_crowd_control\": null, \"mod_reports\": [], \"mod_note\": null, \"distinguished\": null}}], \"after\": null, \"before\": null}}]")))